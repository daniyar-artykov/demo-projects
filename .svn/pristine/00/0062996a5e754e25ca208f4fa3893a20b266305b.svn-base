/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import java.awt.Component;
import java.awt.GridBagConstraints;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

import sleekbill.Common;
import sleekbill.Config;
import sleekbill.Messages;
import sleekbill.beans.CompanyDetails;
import sleekbill.util.EmailValidator;
import sleekbill.util.SBSwingUtils;
import sleekbill.utils.SBDesktop;

/**
 *
 * @author Andrei
 */
public class JDialogFeedback extends javax.swing.JDialog {

    ImageIcon[] images;
    String[] listaOptiuni = {"Suggestion", "Question", "Complaint"};
    String[] numeIcoane = {"ico_sugestie.png", "ico_intrebare.png", "ico_problema.png"};

    /**
     * Creates new form JDialogFeedback
     */
    public JDialogFeedback(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);

        jLImage.setIcon(new javax.swing.ImageIcon("./images/icons/sugestii_img_mail.png"));
        jCBSuggestion.setModel(new javax.swing.DefaultComboBoxModel(listaOptiuni));

        setComboBoxImages();

        SBSwingUtils.applyFocusBorder(this);
        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.addPaidComponent(jTFEmail);

        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPMessage = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAMessage = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFEmail = new javax.swing.JTextField();
        jTFSubject = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jCBSuggestion = new javax.swing.JComboBox();
        jBOk = new javax.swing.JButton();
        jLImage = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("We appreciate your feedback");
        setMaximumSize(new java.awt.Dimension(830, 500));
        setMinimumSize(new java.awt.Dimension(830, 500));
        setPreferredSize(new java.awt.Dimension(830, 500));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(229, 235, 242));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(195, 210, 219), 1, true));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 209, 213)));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPMessage.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Message");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPMessage.add(jLabel3, gridBagConstraints);

        jScrollPane1.setBorder(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(250, 112));

        jTAMessage.setLineWrap(true);
        jTAMessage.setWrapStyleWord(true);
        jTAMessage.setName("tfMessage"); // NOI18N
        jScrollPane1.setViewportView(jTAMessage);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPMessage.add(jScrollPane1, gridBagConstraints);

        jLabel6.setText("I have a");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPMessage.add(jLabel6, gridBagConstraints);

        jLabel2.setText("Email for reply");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPMessage.add(jLabel2, gridBagConstraints);

        jTFEmail.setName("tfEmail"); // NOI18N
        jTFEmail.setPreferredSize(new java.awt.Dimension(250, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPMessage.add(jTFEmail, gridBagConstraints);

        jTFSubject.setName("tfSubject"); // NOI18N
        jTFSubject.setPreferredSize(new java.awt.Dimension(250, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPMessage.add(jTFSubject, gridBagConstraints);

        jLabel1.setText("Subject");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPMessage.add(jLabel1, gridBagConstraints);

        jCBSuggestion.setName("cbType"); // NOI18N
        jCBSuggestion.setPreferredSize(new java.awt.Dimension(250, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPMessage.add(jCBSuggestion, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jPMessage, gridBagConstraints);

        jBOk.setIcon(new ImageIcon("./images/buttons/email.png"));
        jBOk.setText("Send Message");
        jBOk.setMaximumSize(new java.awt.Dimension(150, 30));
        jBOk.setMinimumSize(new java.awt.Dimension(150, 30));
        jBOk.setName("tfSend"); // NOI18N
        jBOk.setPreferredSize(new java.awt.Dimension(150, 30));
        jBOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        jPanel3.add(jBOk, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jLImage, gridBagConstraints);

        jLabel4.setText("<html>We welcome your feedback and suggestions. \nFor help regarding Sleek Bill functions, please be sure to also <a href=\"url\">check our FAQ page.</a></html>");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 18, 18);
        jPanel3.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanel2.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOkActionPerformed
        if (jTFSubject.getText().isEmpty()) {
            Messages.showWarningMessage(this, "Please supply a subject for your message.", "Warning");
            return;
        }
        if (jTFEmail.getText().isEmpty() || !EmailValidator.isValid(jTFEmail.getText().toLowerCase())) {

            int nResult = Messages.YES_OPTION;
            if (!Common.selectedCompanyConfig.get(Config.INDIA).equals("free")) {
                nResult = Messages.showQuestionMessage(this,
                        "Your haven't supplied a valid email address. What would you like to do?", "Email reminder",
                        new String[]{"Send Anyway", "Cancel Sending"}, "Cancel Sending");
            }
            if (Messages.YES_OPTION == nResult) {
                send();
            }
        } else {
            send();
        }

    }//GEN-LAST:event_jBOkActionPerformed

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        try {
            SBDesktop.browse(new java.net.URI("https://www.billingsoftware.in/questions-billing-software.html"));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jLabel4MousePressed

    private void send() {
        try {

            URL url = new URL(Common.URL_FEEDBACK);
            URLConnection conn = url.openConnection();

//            if (!jTFEmail.getText().equals("") && !EmailValidator.isValid(jTFEmail.getText())) {
//                Messages.showErrorMessage(this, "Adresa de email nu este valida!", "Eroare trimitere sugestii");
//                return;
//            }
            String os = "";

            if (System.getProperty("os.name").toLowerCase().indexOf("vista") >= 0) {
                os = "vista";
            } else if (System.getProperty("os.name").toLowerCase().indexOf("windows 7") >= 0) {
                os = "win7";
            } else if (System.getProperty("os.name").toLowerCase().indexOf("linux") >= 0) {
                os = "linux";
            } else if (System.getProperty("os.name").toLowerCase().indexOf("mac") >= 0) {
                os = "mac";
            } else if (System.getProperty("os.name").toLowerCase().indexOf("windows xp") >= 0) {
                os = "winxp";
            } else {
                os = System.getProperty("os.name");
            }

            CompanyDetails cd = new CompanyDetails(CompanyDetails.getLast(Common.connection.getConnection()));

            int nResult = Common.vKCheckAll(Common.connection);

            // Construct data
            String data = URLEncoder.encode("company", "UTF-8") + "=" + URLEncoder.encode(cd.getName(), "UTF-8")
                    + "&" + URLEncoder.encode("subject", "UTF-8") + "=" + URLEncoder.encode(jTFSubject.getText(), "UTF-8")
                    + "&" + URLEncoder.encode("phone", "UTF-8") + "=" + URLEncoder.encode(cd.getTelephone() == null ? "" : cd.getTelephone(), "UTF-8")
                    + "&" + URLEncoder.encode("message", "UTF-8") + "=" + URLEncoder.encode(jTAMessage.getText() + "\n\n" + (nResult == -1 ? (Common.selectedCompanyConfig.get(Config.INDIA).equals("free") ? "Free " : "Registered ") : "Trial ") + "User", "UTF-8")
                    + "&" + URLEncoder.encode("email", "UTF-8") + "=" + URLEncoder.encode(jTFEmail.getText(), "UTF-8")
                    + "&" + URLEncoder.encode("version", "UTF-8") + "=" + URLEncoder.encode(Common.getVersion(), "UTF-8")
                    + "&" + URLEncoder.encode("no_version", "UTF-8") + "=" + URLEncoder.encode(Common.getVersionNr() + "." + Common.getVersionMinor(), "UTF-8")
                    + "&" + URLEncoder.encode("ref", "UTF-8") + "=" + URLEncoder.encode(Common.INSTALLATION_SOURCE, "UTF-8")
                    + "&" + URLEncoder.encode("suggestion_type", "UTF-8") + "=" + URLEncoder.encode(jCBSuggestion.getItemAt(jCBSuggestion.getSelectedIndex()).toString(), "UTF-8")
                    + "&" + URLEncoder.encode("has_licence", "UTF-8") + "=" + URLEncoder.encode(nResult == -1 ? "true" : "false", "UTF-8")
                    + "&" + URLEncoder.encode("os", "UTF-8") + "=" + URLEncoder.encode(os, "UTF-8");

            // Send data
            conn.setDoOutput(true);
            OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());
            wr.write(data);
            wr.flush();
            wr.close();

            // Get the response
            conn.setReadTimeout(Common.URLCONNECTION_TIMEOUT);
            BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String line;
            while ((line = rd.readLine()) != null) {
                if (line.equals(Common.SUGESTII_SCRIPT_RESPONSE)) {
                    Messages.showOkMessage(this, "Your feedback was successfully submitted! Thank you very much!", "Submit feedback");
                    jCBSuggestion.setSelectedIndex(0);
                    jTFSubject.setText("");
                    jTAMessage.setText("");
                    jTFEmail.setText("");
                } else {
                    throw new Exception();
                }
            }
            rd.close();

            Common.selectedCompanyConfig.set(Config.SENT_FEEDBACK, "true");
        } catch (IOException ex) {
            Messages.showErrorMessage(this, "Your feedback could not be submitted! Please check your internet connection!", "Error");
            ex.printStackTrace();
        } catch (Exception e) {
            Messages.showErrorMessage(this, "Your feedback could not be submitted!", "Error");
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogFeedback dialog = new JDialogFeedback(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    void setComboBoxImages() {

        images = new ImageIcon[numeIcoane.length];
        Integer[] intArray = new Integer[numeIcoane.length];
        for (int i = 0; i < numeIcoane.length; i++) {
            intArray[i] = new Integer(i);
            images[i] = new ImageIcon("./images/icons/" + numeIcoane[i]);
            if (images[i] != null) {
                images[i].setDescription(numeIcoane[i]);
            }
        }

        ComboBoxRenderer renderer = new ComboBoxRenderer();
        renderer.setPreferredSize(jCBSuggestion.getPreferredSize());
        jCBSuggestion.setRenderer(renderer);

        GridBagConstraints gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPMessage.add(jCBSuggestion, gridBagConstraints);
    }

    class ComboBoxRenderer extends JLabel implements ListCellRenderer {

        public ComboBoxRenderer() {
            setOpaque(true);
            setHorizontalAlignment(LEFT);
            setVerticalAlignment(JLabel.CENTER);
            setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));
        }

        /*
         * This method finds the image and text corresponding
         * to the selected value and returns the label, set up
         * to display the text and image.
         */
        public Component getListCellRendererComponent(
                JList list,
                Object value,
                int index,
                boolean isSelected,
                boolean cellHasFocus) {
            //Get the selected index. (The index param isn't
            //always valid, so just use the value.)
            int selectedIndex = 0;
            for (int i = 0; i < jCBSuggestion.getItemCount(); i++) {
                if ((jCBSuggestion.getItemAt(i)).equals(value)) {
                    selectedIndex = i;
                }
            }

            if (isSelected) {
                setBackground(list.getSelectionBackground());
                setForeground(list.getSelectionForeground());
            } else {
                setBackground(list.getBackground());
                setForeground(list.getForeground());
            }

            //Set the icon and text.  If icon was null, say so.
            ImageIcon icon = images[selectedIndex];
            String optiune = listaOptiuni[selectedIndex];
            setIcon(icon);
            if (icon != null) {
                setText(optiune);
            }
            return this;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBOk;
    private javax.swing.JComboBox jCBSuggestion;
    private javax.swing.JLabel jLImage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPMessage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTAMessage;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFSubject;
    // End of variables declaration//GEN-END:variables
}
