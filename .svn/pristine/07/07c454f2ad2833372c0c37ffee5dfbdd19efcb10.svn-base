/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import java.awt.Cursor;
import java.awt.Dialog;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;

import javax.swing.ImageIcon;

import sleekbill.Common;
import sleekbill.entities.StateEntity;
import sleekbill.frames.autosuggesterdata.SBACCities;
import sleekbill.swingutils.autosuggesters.AutosuggesterItem;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import static sleekbill.Common.INSTALLATION_SOURCE;
import static sleekbill.Common.sbProperties;
import static sleekbill.Common.vKCheckAll;
import sleekbill.Config;
import sleekbill.Messages;
import sleekbill.SBConstants;
import static sleekbill.SBConstants.URLCONNECTION_TIMEOUT_EX;
import sleekbill.beans.CompanyDetails;
import sleekbill.swingutils.JTABackground;
import sleekbill.util.EmailValidator;
import sleekbill.util.Placeholder;
import sleekbill.util.SBSwingUtils;
import sleekbill.utils.SBDesktop;

/**
 *
 * @author Andrei
 */
public class JDialogRegister extends javax.swing.JDialog {

    SBACCities asData1 = new SBACCities(Common.connection);
    private boolean premium = true;

    /**
     * Creates new form JDialogClient
     */
    public JDialogRegister(java.awt.Frame parent, boolean modal, boolean premium) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.premium = premium;
        jComboBox1.setSelectedIndex(premium ? 0 : 2);
        initDialog();
    }

    /**
     * Creates new form JDialogClient
     */
    public JDialogRegister(Dialog parent, boolean modal, boolean premium) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.premium = premium;
        jComboBox1.setSelectedIndex(premium ? 0 : 2);
        initDialog();
    }

    private void initDialog() {
        String lifetime = "Lifetime - x INR".replace("x", Common.LIFETIME_PRICE);
        String yearly = "Yearly - x INR".replace("x", Common.YEARLY_PRICE);

        if (premium) {
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{lifetime, yearly}));
        } else {
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{lifetime, yearly, "Free"}));
        }
        jComboBox1.setSelectedIndex(premium ? 0 : 2);

        SBSwingUtils.applyFocusBorder(this);
        SBSwingUtils.addContextMenuToChildren(this);
        try {
            CompanyDetails companyDetails = CompanyDetails.getLast(Common.connection.getConnection());
            jTFCompanyName.setText(companyDetails.getName());
            jTFEmail.setText(companyDetails.getEmail());
            jTFPhone.setText(companyDetails.getTelephone());
            jTextAreaAddress.setText(companyDetails.getAddress());
            jTFZip.setText(companyDetails.getZip());
            sBACPanelCity.setSelectedItem(companyDetails.getCity());
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        SBSwingUtils.removeTabInTextArea(jTextAreaAddress);

        new Placeholder("Youâ€™ll receive your activation code via email", jTFEmail);
        setupMandatory();
        checkMandatory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelSuperContent = new javax.swing.JPanel();
        jPanelBorder = new javax.swing.JPanel();
        jPanelTitle = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanelButtons = new javax.swing.JPanel();
        jBSave = new javax.swing.JButton();
        jPanelContent = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTFFirstName = new javax.swing.JTextField();
        jTFLastName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sBACPanelCity = new sleekbill.swingutils.autosuggesters.SBACPanelTextField(asData1, true, true);
        jLabel3 = new javax.swing.JLabel();
        jTFEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTFPhone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAddress = new JTABackground();
        jLabel5 = new javax.swing.JLabel();
        jTFCompanyName = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTFZip = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Register");
        setMinimumSize(new java.awt.Dimension(450, 500));
        setPreferredSize(new java.awt.Dimension(450, 500));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelSuperContent.setBackground(new java.awt.Color(229, 235, 242));
        jPanelSuperContent.setLayout(new java.awt.GridBagLayout());

        jPanelBorder.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(195, 210, 219), 1, true));
        jPanelBorder.setLayout(new java.awt.GridBagLayout());

        jPanelTitle.setBackground(new java.awt.Color(253, 253, 253));
        jPanelTitle.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 1, new java.awt.Color(203, 209, 213)));
        jPanelTitle.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Please fill in your details to activate your License");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelTitle.add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelBorder.add(jPanelTitle, gridBagConstraints);

        jPanelButtons.setBackground(new java.awt.Color(246, 246, 246));
        jPanelButtons.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(203, 209, 213)));
        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jBSave.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jBSave.setText("Proceed");
        jBSave.setName("bSave"); // NOI18N
        jBSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBSaveMouseClicked(evt);
            }
        });
        jBSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons.add(jBSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelBorder.add(jPanelButtons, gridBagConstraints);

        jPanelContent.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(203, 209, 213)));
        jPanelContent.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("City");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel10, gridBagConstraints);

        jLabel8.setText("Address");
        jLabel8.setMaximumSize(new java.awt.Dimension(90, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(90, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel1.setText("First Name");
        jLabel1.setMaximumSize(new java.awt.Dimension(90, 14));
        jLabel1.setMinimumSize(new java.awt.Dimension(90, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel1, gridBagConstraints);

        jTFFirstName.setMinimumSize(new java.awt.Dimension(150, 20));
        jTFFirstName.setName("tfClientName"); // NOI18N
        jTFFirstName.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jTFFirstName, gridBagConstraints);

        jTFLastName.setMinimumSize(new java.awt.Dimension(150, 20));
        jTFLastName.setName("tfContact"); // NOI18N
        jTFLastName.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jTFLastName, gridBagConstraints);

        jLabel2.setText("Last Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel2, gridBagConstraints);

        sBACPanelCity.setMaximumSize(new java.awt.Dimension(100, 20));
        sBACPanelCity.setMinimumSize(new java.awt.Dimension(100, 20));
        sBACPanelCity.setName("tfCity"); // NOI18N
        sBACPanelCity.setPreferredSize(new java.awt.Dimension(75, 20));
        sBACPanelCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sBACPanelCityFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(sBACPanelCity, gridBagConstraints);

        jLabel3.setText("Zip Code");
        jLabel3.setMaximumSize(new java.awt.Dimension(30, 14));
        jLabel3.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel3.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel3, gridBagConstraints);

        jTFEmail.setMinimumSize(new java.awt.Dimension(150, 20));
        jTFEmail.setName("tfEmail"); // NOI18N
        jTFEmail.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jTFEmail, gridBagConstraints);

        jLabel4.setText("Company Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel4, gridBagConstraints);

        jTFPhone.setMinimumSize(new java.awt.Dimension(150, 20));
        jTFPhone.setName("tfPhone"); // NOI18N
        jTFPhone.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jTFPhone, gridBagConstraints);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextAreaAddress.setColumns(30);
        jTextAreaAddress.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextAreaAddress.setLineWrap(true);
        jTextAreaAddress.setRows(5);
        jTextAreaAddress.setWrapStyleWord(true);
        jTextAreaAddress.setMinimumSize(new java.awt.Dimension(244, 74));
        jTextAreaAddress.setName("taNotes1"); // NOI18N
        jScrollPane1.setViewportView(jTextAreaAddress);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jLabel5.setText("Phone");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel5, gridBagConstraints);

        jTFCompanyName.setMinimumSize(new java.awt.Dimension(150, 20));
        jTFCompanyName.setName("tfPhone"); // NOI18N
        jTFCompanyName.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jTFCompanyName, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lifetime - 2499 INR", "Yeary - 1249 INR", "Free" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jComboBox1, gridBagConstraints);

        jLabel6.setText("Pricing Plan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel6, gridBagConstraints);

        jTFZip.setMinimumSize(new java.awt.Dimension(150, 20));
        jTFZip.setName("tfEmail"); // NOI18N
        jTFZip.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jTFZip, gridBagConstraints);

        jLabel9.setText("Email");
        jLabel9.setMaximumSize(new java.awt.Dimension(30, 14));
        jLabel9.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel9.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelContent.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelBorder.add(jPanelContent, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanelSuperContent.add(jPanelBorder, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelSuperContent, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sBACPanelCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sBACPanelCityFocusLost
        AutosuggesterItem selectedItem = sBACPanelCity.getSbTextField().getSelectedItem();

        if (selectedItem != null) {
            StateEntity aux = (StateEntity) selectedItem.getObj();

        }
    }//GEN-LAST:event_sBACPanelCityFocusLost

    private void setupMandatory() {
        jTFCompanyName.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
        jTFEmail.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
        jTFFirstName.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
        jTFLastName.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
        jTFPhone.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
        jTextAreaAddress.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });

        sBACPanelCity.getSbTextField().getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
        jTFZip.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
    }

    private boolean checkMandatory() {
        jBSave.setEnabled(false);
        if (jTFCompanyName.getText().trim().isEmpty()) {
            return false;
        }
        if (!EmailValidator.isValid(jTFEmail.getText().trim().toLowerCase())) {
            return false;
        }
        if (jTFZip.getText().trim().isEmpty() && jComboBox1.getSelectedIndex() != 2) {
            return false;
        }
        if (jTFFirstName.getText().trim().isEmpty()) {
            return false;
        }
        if (jTFLastName.getText().trim().isEmpty()) {
            return false;
        }
        if (jTFPhone.getText().trim().isEmpty()) {
            return false;
        }
        if (jTextAreaAddress.getText().trim().isEmpty() && jComboBox1.getSelectedIndex() != 2) {
            return false;
        }
        if (sBACPanelCity.getSbTextField().getText().trim().isEmpty()) {
            return false;
        }
        jBSave.setEnabled(true);
        return true;

    }

    private void jBSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSaveActionPerformed

        jBSave.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        int pricingPlan = jComboBox1.getSelectedIndex();
        if (pricingPlan == 2) {
            try {
                URL url = new URL(SBConstants.URL_INSERT_LICENCE_INDIA);
                URLConnection conn = url.openConnection();
                conn.setReadTimeout(URLCONNECTION_TIMEOUT_EX);

                String data = "version=" + URLEncoder.encode(Common.getVersion(), "UTF-8")
                        + "&nr_version=" + URLEncoder.encode(Common.getVersionNr(), "UTF-8") + (Common.getVersionMinor() != null ? "." + URLEncoder.encode(Common.getVersionMinor(), "UTF-8") : "")
                        + "&ref=" + URLEncoder.encode(INSTALLATION_SOURCE, "UTF-8")
                        + "&osType=" + URLEncoder.encode(Common.getOsType(), "UTF-8")
                        + "&addr=" + URLEncoder.encode(jTextAreaAddress.getText(), "UTF-8")
                        + "&name=" + URLEncoder.encode(jTFCompanyName.getText(), "UTF-8")
                        + "&email=" + URLEncoder.encode(jTFEmail.getText(), "UTF-8")
                        + "&days=" + URLEncoder.encode(String.valueOf(vKCheckAll(Common.connection)), "UTF-8");

                if ("true".equals(sbProperties.get(Config.TEST_UPDATE))) {
                    data = data + "&test=true";
                }

                conn.setDoOutput(true);
                OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());
                wr.write(data);
                wr.flush();
                wr.close();

                if (Common.getStringFromInputStream(conn.getInputStream()).equals("ok")) {
                    Messages.showWarningMessage(this, "<html>You have successfully registered your copy of Sleek Bill for India.<br>You only need to restart the program now.</html>", "Information", new Object[]{"Ok"}, "Ok");
                    System.exit(-1);//8q; 
                } else {
                    Messages.showErrorMessage(this, "Your registration data could not be submitted!", "Error");
                }
            } catch (Exception ex) {
                Messages.showErrorMessage(this, "Your registration data could not be submitted!", "Error");
                ex.printStackTrace();
            }
        } else {
            try {
                String baseUrl = "https://secure.avangate.com/order/pf.php?MERCHANT=INTELLIT";

                String windexYearly = URLEncoder.encode("https://secure.avangate.com/order/checkout.php?PRODS=4634561&QTY=1&AFFILIATE=71618&AFFSRC=soft-windex&CART=1", "UTF-8");
                String windexLifetime = URLEncoder.encode("https://secure.avangate.com/order/checkout.php?PRODS=4634544&QTY=1&AFFILIATE=71618&AFFSRC=soft-windex&CART=1", "UTF-8");
                String fusionYearly = URLEncoder.encode("https://secure.avangate.com/order/checkout.php?PRODS=4634561&QTY=1&AFFILIATE=79666&AFFSRC=fusiontc&CART=1", "UTF-8");
                String fusionLifetime = URLEncoder.encode("https://secure.avangate.com/order/checkout.php?PRODS=4634544&QTY=1&AFFILIATE=79666&AFFSRC=fusiontc&CART=1", "UTF-8");
                String vkcontrolYearly = URLEncoder.encode("https://secure.avangate.com/order/checkout.php?PRODS=4634561&QTY=1&AFFILIATE=80171&AFFSRC=soft-vkcontrol&CART=1", "UTF-8");
                String vkcontrolLifetime = URLEncoder.encode("https://secure.avangate.com/order/checkout.php?PRODS=4634544&QTY=1&AFFILIATE=80171&AFFSRC=soft-vkcontrol&CART=1", "UTF-8");

                String product_url = "";
                if (pricingPlan == 1) { // yearly 1
                    product_url = Common.YEARLY_URL;
                    if (Common.INSTALLATION_SOURCE.equals("india-windex")) {
                        product_url = windexYearly;
                    }
                    if (Common.INSTALLATION_SOURCE.equals("india-fusion")) {
                        product_url = fusionYearly;
                    }
                    if (Common.INSTALLATION_SOURCE.equals("india-vkcontrol")) {
                        product_url = vkcontrolYearly;
                    }
                } else if (pricingPlan == 0) {//lifetime 0
                    product_url = Common.LIFETIME_URL;
                    if (Common.INSTALLATION_SOURCE.equals("india-windex")) {
                        product_url = windexLifetime;
                    }
                    if (Common.INSTALLATION_SOURCE.equals("india-fusion")) {
                        product_url = fusionLifetime;
                    }
                    if (Common.INSTALLATION_SOURCE.equals("india-vkcontrol")) {
                        product_url = vkcontrolLifetime;
                    }
                }

                String encodedUrl = "";
                String informations = "";

                encodedUrl = "&URL=" + (Common.alreadyEncoded ? product_url : URLEncoder.encode(product_url, "UTF-8"));

                informations = "&BILL_COMPANY=" + URLEncoder.encode(jTFCompanyName.getText(), "UTF-8") + "&BILL_FNAME=" + URLEncoder.encode(jTFFirstName.getText(), "UTF-8");
                informations += "&BILL_LNAME=" + URLEncoder.encode(jTFLastName.getText(), "UTF-8") + "&BILL_ADDRESS=" + URLEncoder.encode(jTextAreaAddress.getText(), "UTF-8");
                informations += "&BILL_CITY=" + URLEncoder.encode(sBACPanelCity.getText(), "UTF-8") + "&BILL_ZIPCODE=" + URLEncoder.encode(jTFZip.getText(), "UTF-8");
                informations += "&BILL_EMAIL=" + URLEncoder.encode(jTFEmail.getText(), "UTF-8") + "&BILL_PHONE=" + URLEncoder.encode(jTFPhone.getText(), "UTF-8");

                String url = baseUrl + informations + encodedUrl;

                if (java.awt.Desktop.isDesktopSupported()) {
                    java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
                    if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
                        java.net.URI uri = new java.net.URI(url);
                        SBDesktop.browse(uri);
                    }
                }

                if (1 == Messages.showWarningMessage(this, "<html>Thank you for purchasing the Premium License!<br>You will be able to issue more documents after the License is activated.<br>What would you like to do next?</html>", "Information", new Object[]{"Continue using", "Exit program"}, "Exit program")) {
                    System.exit(-1);//8q; 
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        jBSave.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jBSaveActionPerformed

    private void jBSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBSaveMouseClicked
        if (!jBSave.isEnabled()) {
            Messages.showErrorMessage(this, "Please make sure you have provided valid information in all fields.", "Error");
            return;
        }
    }//GEN-LAST:event_jBSaveMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogRegister dialog = new JDialogRegister(new javax.swing.JFrame(), true, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBSave;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBorder;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelSuperContent;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFCompanyName;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFFirstName;
    private javax.swing.JTextField jTFLastName;
    private javax.swing.JTextField jTFPhone;
    private javax.swing.JTextField jTFZip;
    private javax.swing.JTextArea jTextAreaAddress;
    private sleekbill.swingutils.autosuggesters.SBACPanelTextField sBACPanelCity;
    // End of variables declaration//GEN-END:variables

}
