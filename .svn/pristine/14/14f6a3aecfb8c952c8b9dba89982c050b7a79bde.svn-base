/*
 * JPanelQuestion.java
 * Created on 28.09.2011, 16:01:54
 */
package sleekbill.swingutils;

import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Dimension;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LinearGradientPaint;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.RenderingHints;
import java.awt.geom.Point2D;
import java.awt.geom.RoundRectangle2D;
import java.math.BigDecimal;

import javax.swing.JSlider;
import javax.swing.plaf.basic.BasicSliderUI;
/**
 * @author Oli P
 */
public class JPanelQuestion extends javax.swing.JPanel {

    private int dbId;
    private BigDecimal raspuns;
    private char citita;
//    private JRadioButton[] jRBList;

    private Color startGradient = new Color(255, 255, 255);
	private Color endGradient = new Color(242, 247, 250);
    private float alpha = 0.6f;
 
    public JPanelQuestion() {
    }

    public JPanelQuestion(String text) {
        initComponents();
        removeAll();
        jLText.setText(text);
        add(jLText);
    }

    public JPanelQuestion(int dbId, int numarIntrebare, String textIntrebare, String textRaspuns, 
			BigDecimal raspunsAlesInTrecut, char citita) {
        this.dbId = dbId;
        this.raspuns = raspunsAlesInTrecut;
        this.citita = citita;
        initComponents();
        initFields();

        addNewQuestion(numarIntrebare, textIntrebare, textRaspuns, raspunsAlesInTrecut);
        jPQuestion.repaint();
        jSRaspuns.repaint();
    }

    private void addNewQuestion(int numarIntrebare, String textIntrebare, String textRaspuns, BigDecimal raspunsAles) {
        jLNumber.setText(numarIntrebare + "");
        jTAQuestion.setText(textIntrebare);
        setSliderValue(raspunsAles);
        jLValoareSlider.setText(getSliderValue() + "");

//        String[] raspunsuri = textRaspuns.split("%");
//        GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
//        gridBagConstraints.weightx = 0.01;
//        gridBagConstraints.gridy = 1;
//        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
//        gridBagConstraints.insets = new java.awt.Insets(8, 10, 5, 10);
//        gridBagConstraints.weightx = 0.1;

//        jRBList = new JRadioButton[raspunsuri.length];
//        for (int i = 0; i < raspunsuri.length; i++) {
//            gridBagConstraints.gridx = i + 1;
//            jRBList[i] = new JRadioButton(raspunsuri[i]);
//            buttonGroup1.add(jRBList[i]);
//            jRBList[i].setSelected((i + 1) == raspunsAles);
//            jRBList[i].setOpaque(false);
//            jPRadioButtons.add(jRBList[i], gridBagConstraints);
//        }
//        for (int i = 0; i < jRBList.length; i++) {
//            jRBList[i].addActionListener(new RadioButtonActionListener(i + 1, this));
//        }    
    }

//    class RadioButtonActionListener implements ActionListener {
//
//        int idx;
//        JPanelQuestion panel;
//
//        public RadioButtonActionListener(int idx, JPanelQuestion panel) {
//            this.idx = idx;
//            this.panel = panel;
//        }
//
//        @Override
//        public void actionPerformed(ActionEvent e) {
//            panel.setRaspuns(idx);
//        }
//    }

    class JPQGradient extends javax.swing.JPanel {

        public JPQGradient() {        
        }

        @Override
        public void paintComponent(Graphics g) {
            super.paintComponent(g);

            Graphics2D g2 = (Graphics2D) g;
            Paint oldPaint = g2.getPaint();
            Composite oldComposite = g2.getComposite();

            GradientPaint paint = new GradientPaint(0, 0, startGradient, getWidth(), 0, endGradient);
            AlphaComposite newComposite = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha);
            g2.setComposite(newComposite);
            g2.setPaint(paint);
            g2.fill(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 0, 0));
            g2.setPaint(oldPaint);
            g2.setComposite(oldComposite);
            super.paintComponent( g2 );
        }
    }

    private static class MySliderUI extends BasicSliderUI {

        private static float[] fracs = {0.0f, 0.25f, 0.6f, 1.0f};
        private LinearGradientPaint p;

        public MySliderUI(JSlider slider) {
            super(slider);
        }

        @Override
        public void paintTrack(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            trackRect.setSize(new Dimension(390, 5));
            java.awt.Rectangle t = trackRect;
            Point2D start = new Point2D.Float(t.x, t.y);
            Point2D end = new Point2D.Float(t.width, t.height);

            Color[] colors = {new Color(175, 0, 0), new Color(255, 132, 0), new Color(185, 158, 0), new Color(0, 185, 0)};

            p = new LinearGradientPaint(start, end, fracs, colors);
            g2d.setPaint(p);

            g2d.fillRect(t.x, t.y + 9, t.width, t.height);
            //border
            g2d.setColor(new Color(63,74,97));
            g2d.drawRect(t.x, t.y + 9, t.width, t.height);
        }

        @Override
        public void paintThumb(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(
                RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
            thumbRect.setSize(new Dimension(12, 23));
            java.awt.Rectangle t = thumbRect;
            g2d.setColor(Color.black);

            Polygon polygon = new Polygon(new int[]{t.x, t.x, t.x + 5, t.x + 10, t.x + 10},
                                          new int[]{t.y + 3, t.y + 10, t.y + 20, t.y + 10, t.y + 3}, 5);

            Point2D start = new Point2D.Float(t.x+5, t.y + 3);
            Point2D end = new Point2D.Float(t.x + 5, t.y + 20);
            Color[] colors = {new Color(212,224,238), new Color(255,255,255), new Color(183,206,229)};
            p = new LinearGradientPaint(start, end, new float[]{0.0f, 0.5f, 1.0f}, colors);
            g2d.setPaint(p);
            g2d.fillPolygon(polygon);
            
            g2d.setColor(new Color(75,100,149));
            g2d.drawPolygon(polygon);

        }
    }

    private BigDecimal getSliderValue() {
        BigDecimal value = BigDecimal.valueOf(5);
        value = BigDecimal.valueOf(jSRaspuns.getValue()).divide(BigDecimal.TEN);
        return value;
    }

    private void setSliderValue(BigDecimal value) {
        value = value.multiply(BigDecimal.TEN);
        jSRaspuns.setValue((int)Double.parseDouble(value.toString()));
    }

    private void sliderStateChanged() {
        BigDecimal value = getSliderValue();
        jLValoareSlider.setText(value + "");
        setRaspuns(value);
    }

    private void initFields() {
        jLImage.setIcon(new javax.swing.ImageIcon("./images/icons/poll_face.png"));
        jLSadFace.setIcon(new javax.swing.ImageIcon("./images/icons/sugestii_smile_sad.png"));
        jLHappyFace.setIcon(new javax.swing.ImageIcon("./images/icons/sugestii_smile_happy.png"));

        jSRaspuns.setPaintTicks(true);
        jSRaspuns.setPaintLabels(true);
        jSRaspuns.setUI(new MySliderUI(jSRaspuns));
    }

    public int getDbId() {
        return dbId;
    }

    public BigDecimal getRaspuns() {
        return raspuns;
    }

    public void setRaspuns(BigDecimal raspuns) {
        this.raspuns = raspuns;
    }

    public char getCitita() {
        return citita;
    }

    public void setCitita(char citita) {
        this.citita = citita;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLText = new javax.swing.JLabel();
        jLNumber = new javax.swing.JLabel();
        jPQuestion = new JPQGradient();
        jLImage = new javax.swing.JLabel();
        jPRadioButtons = new javax.swing.JPanel();
        jLValoareSlider = new javax.swing.JLabel();
        jLSadFace = new javax.swing.JLabel();
        jLHappyFace = new javax.swing.JLabel();
        jPSlider = new javax.swing.JPanel();
        jSRaspuns = new javax.swing.JSlider();
        jTAQuestion = new javax.swing.JEditorPane();

        jLText.setText("jLabel1");

        setLayout(new java.awt.GridBagLayout());

        jLNumber.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLNumber.setForeground(new java.awt.Color(255, 127, 42));
        jLNumber.setText("8");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(jLNumber, gridBagConstraints);

        jPQuestion.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPQuestion.setOpaque(false);
        jPQuestion.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        jPQuestion.add(jLImage, gridBagConstraints);

        jPRadioButtons.setOpaque(false);
        jPRadioButtons.setPreferredSize(new java.awt.Dimension(414, 42));
        jPRadioButtons.setLayout(new java.awt.GridBagLayout());

        jLValoareSlider.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPRadioButtons.add(jLValoareSlider, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.01;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPRadioButtons.add(jLSadFace, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.01;
        jPRadioButtons.add(jLHappyFace, gridBagConstraints);

        jPSlider.setOpaque(false);
        jPSlider.setLayout(new java.awt.GridBagLayout());

        jSRaspuns.setMaximum(50);
        jSRaspuns.setMinimum(-50);
        jSRaspuns.setValue(0);
        jSRaspuns.setFocusable(false);
        jSRaspuns.setOpaque(false);
        jSRaspuns.setPreferredSize(new java.awt.Dimension(410, 22));
        jSRaspuns.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSRaspunsStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPSlider.add(jSRaspuns, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPRadioButtons.add(jPSlider, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPQuestion.add(jPRadioButtons, gridBagConstraints);

        jTAQuestion.setBorder(null);
        jTAQuestion.setContentType("text/html"); // NOI18N
        jTAQuestion.setEditable(false);
        jTAQuestion.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPQuestion.add(jTAQuestion, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 10);
        add(jPQuestion, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jSRaspunsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSRaspunsStateChanged
        sliderStateChanged();
}//GEN-LAST:event_jSRaspunsStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.ButtonGroup buttonGroup1;
    protected javax.swing.JLabel jLHappyFace;
    protected javax.swing.JLabel jLImage;
    protected javax.swing.JLabel jLNumber;
    protected javax.swing.JLabel jLSadFace;
    protected javax.swing.JLabel jLText;
    protected javax.swing.JLabel jLValoareSlider;
    protected javax.swing.JPanel jPQuestion;
    protected javax.swing.JPanel jPRadioButtons;
    protected javax.swing.JPanel jPSlider;
    protected javax.swing.JSlider jSRaspuns;
    protected javax.swing.JEditorPane jTAQuestion;
    // End of variables declaration//GEN-END:variables
}
