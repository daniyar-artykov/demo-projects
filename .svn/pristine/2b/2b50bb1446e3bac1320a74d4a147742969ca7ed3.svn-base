/*
 * JDialogSplashScreen.java
 *
 * Created on November 29, 2007, 1:48 PM
 */

package sleekbill.swingutils;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.lang.reflect.InvocationTargetException;

import javax.swing.ImageIcon;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import sleekbill.Common;
//import java.awt.SplashScreen;

/**
 *
 * @author  flaviu marcu    
 */
public class JDialogSplashScreen extends javax.swing.JDialog {
    
    private Image img;
    private ImageIcon imageIcon;
    java.awt.image.BufferedImage bufferedImage;
    java.awt.Graphics bufferedGraphics;
            
    /** Creates new form JDialogSplashScreen */
    public JDialogSplashScreen() {
        setUndecorated(true);
        initComponents();
        setIconImage(new ImageIcon("./images/icons/icon.png").getImage());
//        AWTUtilities.setWindowOpacity(this, .9f);
        /*
        SplashScreen splash=null;
        try {
            splash = SplashScreen.getSplashScreen();
        } catch(Exception e){
        }
         
        //Obtain the splash-screen bounds.
        if(splash!=null){
            Rectangle splashBounds = splash.getBounds();
            setBounds(splashBounds);
            setPreferredSize(splash.getSize());
            final URL  imageURL = splash.getImageURL();
            imageIcon=new ImageIcon(imageURL);
        }
        else 
         */
        {
            setPreferredSize(new Dimension(480,300));
            setBounds(new Rectangle(0,0,480,300));
            setLocationRelativeTo(null);
            jPBar.setForeground(new Color(163,184,204));
            jPBar.revalidate();
            jPBar.setOpaque(true);
            jPBar.setVisible(true);
        }
        if (imageIcon == null) {
			imageIcon = new ImageIcon(Common.IS_INDIA ? Common.INDIA_SPLASH_FILE_PATH : Common.SPLASH_FILE_PATH);
		}
        int iconWidth = 0;
        int iconHeight =0;
        if(imageIcon.getImageLoadStatus()!=MediaTracker.ERRORED){
            img = imageIcon.getImage();             
            iconWidth = imageIcon.getIconWidth();
            iconHeight = imageIcon.getIconHeight();
            bufferedImage = new java.awt.image.BufferedImage(iconWidth, iconHeight, java.awt.image.BufferedImage.TYPE_INT_ARGB);
            bufferedGraphics = bufferedImage.getGraphics();
            bufferedGraphics.drawImage(img, 0, 0, this);             
        }

        jTFStatus.setEditable(false);
        jTFStatus.setBackground(Color.WHITE);
        setVisible(true);
        toFront();
        //if(splash!=null) splash.close();
    }
    
      public void paintx(Graphics g){
          super.paint(g);
          if(img== null) return;
          //bufferedGraphics.drawImage(img, 0, 0, this); 	
          g.drawImage(bufferedImage, 0, 0, this);
          if(jPBar!=null) jPBar.repaint();
          jLabel1.repaint();
          jTFStatus.repaint();
      }   
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jPanel = new JPTransImagePanel(Common.SPLASH_FILE_PATH);
        jTFStatus = new javax.swing.JTextField();
        jPBar = new javax.swing.JProgressBar();

        jLabel1.setBackground(new java.awt.Color(51, 255, 51));
        jLabel1.setText("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");

        setIconImage(null);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel.setOpaque(false);
        jPanel.setLayout(new java.awt.GridBagLayout());

        jTFStatus.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jTFStatus.setForeground(new java.awt.Color(255, 255, 255));
        jTFStatus.setText("Initializare JVM");
        jTFStatus.setBorder(null);
        jTFStatus.setMinimumSize(new java.awt.Dimension(120, 15));
        jTFStatus.setOpaque(false);
        jTFStatus.setPreferredSize(new java.awt.Dimension(120, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 259;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 12, 0, 12);
        jPanel.add(jTFStatus, gridBagConstraints);

        jPBar.setBackground(new java.awt.Color(206, 207, 206));
        jPBar.setForeground(new java.awt.Color(163, 184, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 369;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 10, 11);
        jPanel.add(jPBar, gridBagConstraints);

        getContentPane().add(jPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (InstantiationException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        } catch (IllegalAccessException ex) {
            ex.printStackTrace();
        }
        SwingUtilities.invokeLater(new Runnable(){
           public void run(){     
                JDialogSplashScreen sp= new JDialogSplashScreen();
           }
        });
    }
    
    public void setBarMaximum(int n){
        jPBar.setMaximum(n);
    }
    
    public void updateBar (final String text) throws InterruptedException,InvocationTargetException{
        jTFStatus.setForeground(new Color(255,255,255)); /*this is default color*/
        SwingUtilities.invokeAndWait(new Runnable(){
           public void run(){
                if(!text.equals(""))  {
                    jTFStatus.setText(text);
                    jTFStatus.setCaretPosition(0);
                }
                jPBar.setValue(jPBar.getValue()+1);            
           }
        });
    }

    public void updateBar (final String text, Color color) throws InterruptedException,InvocationTargetException{
        jTFStatus.setForeground(color);
        SwingUtilities.invokeAndWait(new Runnable(){
           public void run(){
                if(!text.equals(""))  {
                    jTFStatus.setText(text);
                    jTFStatus.setCaretPosition(0);
                }
                jPBar.setValue(jPBar.getValue()+1);            
           }
        });
    }


    public class TransluscentText extends JTextField {
        public TransluscentText(String text) {
            super(text);
            setOpaque(false);
            setForeground(Color.BLACK);
            setBackground(new Color(0,0,0,120));
            setCaretColor(new Color(255,255,255,250));
            setSelectionColor(new Color(0x80,0x80,0xff,96));
        }

        @Override
        protected void paintComponent(Graphics g) {
            g.setColor(getBackground());
            g.fillRect(0,0, getWidth(),getHeight());
            super.paintComponent(g);
        }
    }

    class JPTransImagePanel extends JImagePanel {
        BufferedImage bi;
        public JPTransImagePanel(String imgPath){
            super(imgPath);
        }

        public void refresh(){
            try {
                BufferedImage tmp = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);
                Graphics2D g2 = tmp.createGraphics();
                g2.setBackground(new Color(0x00, 0x00, 0x00, 0x00));
                g2.clearRect(0, 0,img.getWidth(null),img.getHeight(null));
                g2.drawImage(img,0, 0, null);
                bi=tmp;
                g2.dispose();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }


        @Override
        public void paintComponent(Graphics g) {
            refresh();
            super.paintComponent(g);
            g.drawImage(bi, 0, 0, this);
        }

    }


    public int getBarValue(){
        return jPBar.getValue();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jPBar;
    private javax.swing.JPanel jPanel;
    private javax.swing.JTextField jTFStatus;
    // End of variables declaration//GEN-END:variables

}
