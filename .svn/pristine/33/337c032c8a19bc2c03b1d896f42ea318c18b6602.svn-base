/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import java.io.File;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.ToolTipManager;
import sleekbill.Common;
import sleekbill.Config;
import sleekbill.Messages;
import sleekbill.beans.Flag;
import sleekbill.beans.SBDaoException;
import sleekbill.util.SBSwingUtils;

/**
 *
 * @author Andrei
 */
public class JDialogFlags extends javax.swing.JDialog {
    
    private int toolTipDelay = 0;
    private Flag flag;

    /**
     * Creates new form JDialogFlags
     *
     * @param parent
     * @param modal
     * @param flag
     */
    public JDialogFlags(java.awt.Dialog parent, boolean modal, Flag flag) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        init(flag);
        jTabbedPane.setEnabledAt(0, false);
        jTabbedPane.setSelectedIndex(1);
    }
    
    public JDialogFlags(java.awt.Frame parent, boolean modal, Flag flag) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        init(flag);
    }
    
    private void init(Flag flag) {
        
        SBSwingUtils.addPaidComponent(jCheckBoxPassword);
        SBSwingUtils.addPaidComponent(jCheckBoxStocks);
        SBSwingUtils.addPaidComponent(jCheckBoxTotalInWords);
        
        Config c = Common.selectedCompanyConfig;
        jCheckBoxPDF.setSelected(c.get(Config.AUTOSAVE_DOCUMENTS).equals("true"));
        jCheckBoxTips.setSelected(c.get(Config.TIPS).equals("true"));
        jCheckBoxAskProducts.setSelected(c.get(Config.ASK_PRODUCTS).equals("true"));
        jCheckBoxSaveProducts.setSelected(c.get(Config.SAVE_PRODUCTS).equals("true"));
        jCheckBoxPassword.setSelected(c.get(Config.USE_PASSWORD).equals("true"));
        jCheckBoxStocks.setSelected(c.get(Config.KEEP_STOCKS).equals("true"));
        jComboBoxDateFormat.getModel().setSelectedItem(c.get(Config.DATE_MASK).toLowerCase());
        
        String absolutePath = new File(Common.REPORTS_FOLDER_PATH).getAbsolutePath().replace(".\\", "");
        jLabelHelp.setToolTipText("<html>If checked, the program saves the issued documents<br>in PDF format in the <b>" + absolutePath + "</b> folder on your hard disk</html>");
        try {
            flag = flag == null ? Flag.getLast(Common.connection.getConnection()) : flag;
            this.flag = flag;
            jCheckBoxTotalWithTaxes.setSelected(flag.getValueWithTax());
            jCheckBoxTotalWithoutDecimals.setSelected(flag.isTotalWithoutDecimals());
            jCheckBoxTotalInWords.setSelected(flag.isTotalInWords());
            jCheckBoxShowSignature.setSelected(flag.isShowSignature());
            jCheckBoxAddress.setSelected(flag.isShowAddress());
            jCheckBoxTaxPercentage.setSelected(flag.isShowTaxPercentage());
            jCheckBoxShowShipping.setSelected(flag.isShowShipping());
            jCheckBoxReplacePaypal.setSelected(flag.isReplacePaypal());
            jCheckBoxHideAmountDue.setSelected(flag.isHideAmount());
            jCheckBoxDNAmountColumn.setSelected(flag.isShowDeliveryNoteAmount());
            jTextFieldInvoice.setText(flag.getInvoiceLabel());
            jTextFieldEstimate.setText(flag.getEstimateLabel());
            jTextFieldPrice.setText(flag.getPriceLabel());
            jTextFieldProduct.setText(flag.getProductLabel());
            jTextFieldTax.setText(flag.getTaxLabel());
            jTextFieldUoM.setText(flag.getUmLabel());
            jTextFieldQuantity.setText(flag.getQuantityLabel());
            jTextFieldShipping.setText(flag.getShippingLabel());
            jTextFieldPONumber.setText(flag.getPoNumberLabel());
            jComboBoxDecimals.getModel().setSelectedItem(flag.getDecimals().toString());
            jCheckBoxShowQuantity.setSelected(!flag.isReplaceQuantity());//the replace feature was removed so this check must be negated for both reading and saving
            jCheckBoxShowTax.setSelected(flag.isShowTaxColumn());
            jCheckBoxShowUoM.setSelected(flag.isShowUmColumn());
            jCheckBoxShowUnitPrice.setSelected(flag.isShowUPColumn());
            jCheckBoxIndianFormat.setSelected(flag.isIndianFormat());
            jCheckBoxDocumentPrefix.setSelected(flag.isDocumentPrefix());
            if (flag.isDocumentPrefix()) {
                jCheckBoxDateAsPrefix.setSelected(flag.isPrefixAsDate());
                if (flag.getPrefixSeparator() != null) {
                    jComboBoxPrefixSeparator.getModel().setSelectedItem(flag.getPrefixSeparator());
                } else {
                    jComboBoxPrefixSeparator.getModel().setSelectedItem("");
                }
            } else {
                jCheckBoxDateAsPrefix.setEnabled(false);
                jComboBoxPrefixSeparator.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.applyFocusBorder(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelContent = new javax.swing.JPanel();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanelGeneral = new javax.swing.JPanel();
        jPanelBody = new javax.swing.JPanel();
        jCheckBoxPDF = new javax.swing.JCheckBox();
        jCheckBoxTips = new javax.swing.JCheckBox();
        jCheckBoxAskProducts = new javax.swing.JCheckBox();
        jCheckBoxSaveProducts = new javax.swing.JCheckBox();
        jLabelHelp = new javax.swing.JLabel();
        jLabelHelp1 = new javax.swing.JLabel();
        jLabelHelp2 = new javax.swing.JLabel();
        jLabelHelp3 = new javax.swing.JLabel();
        jLabelHelp4 = new javax.swing.JLabel();
        jCheckBoxPassword = new javax.swing.JCheckBox();
        jCheckBoxStocks = new javax.swing.JCheckBox();
        jLabelHelp6 = new javax.swing.JLabel();
        jPanelButtons = new javax.swing.JPanel();
        jButtonSaveG = new javax.swing.JButton();
        jPanelFields = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxDateFormat = new javax.swing.JComboBox();
        jLabelHelp9 = new javax.swing.JLabel();
        jLabelHelp17 = new javax.swing.JLabel();
        jPanelFields1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxDecimals = new javax.swing.JComboBox();
        jPanelDocument = new javax.swing.JPanel();
        jPanelButtons1 = new javax.swing.JPanel();
        jButtonSaveD = new javax.swing.JButton();
        jLabelHelp5 = new javax.swing.JLabel();
        jCheckBoxTotalWithTaxes = new javax.swing.JCheckBox();
        jCheckBoxAddress = new javax.swing.JCheckBox();
        jLabelHelp7 = new javax.swing.JLabel();
        jCheckBoxTotalWithoutDecimals = new javax.swing.JCheckBox();
        jLabelHelp10 = new javax.swing.JLabel();
        jCheckBoxTotalInWords = new javax.swing.JCheckBox();
        jLabelHelp11 = new javax.swing.JLabel();
        jCheckBoxShowSignature = new javax.swing.JCheckBox();
        jLabelHelp12 = new javax.swing.JLabel();
        jCheckBoxTaxPercentage = new javax.swing.JCheckBox();
        jLabelHelp13 = new javax.swing.JLabel();
        jCheckBoxShowShipping = new javax.swing.JCheckBox();
        jLabelHelp14 = new javax.swing.JLabel();
        jLabelHelp15 = new javax.swing.JLabel();
        jCheckBoxReplacePaypal = new javax.swing.JCheckBox();
        jCheckBoxHideAmountDue = new javax.swing.JCheckBox();
        jLabelHelp16 = new javax.swing.JLabel();
        jCheckBoxIndianFormat = new javax.swing.JCheckBox();
        jLabelHelp18 = new javax.swing.JLabel();
        jLabelHelp19 = new javax.swing.JLabel();
        jCheckBoxDocumentPrefix = new javax.swing.JCheckBox();
        jCheckBoxDateAsPrefix = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxPrefixSeparator = new javax.swing.JComboBox();
        jLabelHelp20 = new javax.swing.JLabel();
        jLabelHelp21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldInvoice = new javax.swing.JTextField();
        jTextFieldEstimate = new javax.swing.JTextField();
        jTextFieldProduct = new javax.swing.JTextField();
        jTextFieldQuantity = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jTextFieldShipping = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldUoM = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldTax = new javax.swing.JTextField();
        jCheckBoxShowQuantity = new javax.swing.JCheckBox();
        jCheckBoxShowTax = new javax.swing.JCheckBox();
        jCheckBoxShowUnitPrice = new javax.swing.JCheckBox();
        jCheckBoxShowUoM = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldPONumber = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jCheckBoxDNAmountColumn = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelHelp8 = new javax.swing.JLabel();
        jPanelButtons2 = new javax.swing.JPanel();
        jButtonSaveD1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preferences");
        setMinimumSize(new java.awt.Dimension(570, 565));
        setPreferredSize(new java.awt.Dimension(570, 565));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelContent.setBackground(new java.awt.Color(229, 235, 242));
        jPanelContent.setMinimumSize(new java.awt.Dimension(541, 491));
        jPanelContent.setPreferredSize(new java.awt.Dimension(525, 491));
        jPanelContent.setLayout(new java.awt.GridBagLayout());

        //jTabbedPane.setUI(new SleekTabbedPaneUI(jTabbedPane));
        jTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTabbedPane.setMinimumSize(new java.awt.Dimension(511, 461));
        jTabbedPane.setPreferredSize(new java.awt.Dimension(511, 461));

        jPanelGeneral.setLayout(new java.awt.GridBagLayout());

        jPanelBody.setLayout(new java.awt.GridBagLayout());

        jCheckBoxPDF.setText("Automatically save a backup PDF in reports folder");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jCheckBoxPDF, gridBagConstraints);

        jCheckBoxTips.setText("Show tips on startup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jCheckBoxTips, gridBagConstraints);

        jCheckBoxAskProducts.setText("Ask what to do with newly added products");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jCheckBoxAskProducts, gridBagConstraints);

        jCheckBoxSaveProducts.setText("Automatically save new products to the database");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jCheckBoxSaveProducts, gridBagConstraints);

        jLabelHelp.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp.setToolTipText("<html>If checked, the program saves the issued documents\n<br>in PDF format in the reports folder on your hard disk</html>");
        jLabelHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelpMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelpMouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jLabelHelp, gridBagConstraints);

        jLabelHelp1.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp1.setToolTipText("If checked, the program shows tips on various features on startup");
        jLabelHelp1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp1MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp1MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jLabelHelp1, gridBagConstraints);

        jLabelHelp2.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp2.setToolTipText("<html> If checked, for each new product added in the program, you will be\n<br>asked what you wish to do next with that product</html>");
        jLabelHelp2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp2MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp2MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jLabelHelp2, gridBagConstraints);

        jLabelHelp3.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp3.setToolTipText("<html>If checked, each new product added in the \n<br>program will be saved away to the database</html>");
        jLabelHelp3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp3MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp3MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jLabelHelp3, gridBagConstraints);

        jLabelHelp4.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp4.setToolTipText("<html>Set up a password to secure your business information</html>");
        jLabelHelp4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp4MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp4MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jLabelHelp4, gridBagConstraints);

        jCheckBoxPassword.setText("Use password protection");
        jCheckBoxPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPasswordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jCheckBoxPassword, gridBagConstraints);

        jCheckBoxStocks.setText("Add current stock of products and keep track of stocks");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jCheckBoxStocks, gridBagConstraints);

        jLabelHelp6.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp6.setToolTipText("<html>If checked, you can add the current stock for each product.<br>When a product is used on an invoice, the relevant quantity<br>will be subtracted from the current stock.</html>");
        jLabelHelp6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp6MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp6MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jLabelHelp6, gridBagConstraints);

        jPanelButtons.setBackground(new java.awt.Color(246, 246, 246));
        jPanelButtons.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(203, 209, 213)));
        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jButtonSaveG.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jButtonSaveG.setText("Save");
        jButtonSaveG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveGActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons.add(jButtonSaveG, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 0.1;
        jPanelBody.add(jPanelButtons, gridBagConstraints);

        jPanelFields.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("Date Format");
        jLabel7.setMaximumSize(new java.awt.Dimension(150, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(150, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        jPanelFields.add(jLabel7, gridBagConstraints);

        jComboBoxDateFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " mm - dd - yyyy ", " dd - mm - yyyy ", " mm / dd / yyyy ", " dd / mm / yyyy ", " yyyy - mm - dd " }));
        jComboBoxDateFormat.setMaximumSize(new java.awt.Dimension(130, 20));
        jComboBoxDateFormat.setMinimumSize(new java.awt.Dimension(130, 20));
        jComboBoxDateFormat.setPreferredSize(new java.awt.Dimension(130, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jComboBoxDateFormat, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelBody.add(jPanelFields, gridBagConstraints);

        jLabelHelp9.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp9.setToolTipText("Select the preferred date format");
        jLabelHelp9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp9MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jLabelHelp9, gridBagConstraints);

        jLabelHelp17.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp17.setToolTipText("<html>Select the preferred number of decimal places you<br>\nwant to use in your documents. Choose between 2,3 or 4.</html>");
        jLabelHelp17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp17MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp17MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelBody.add(jLabelHelp17, gridBagConstraints);

        jPanelFields1.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Number of decimal places");
        jLabel9.setMaximumSize(new java.awt.Dimension(150, 14));
        jLabel9.setMinimumSize(new java.awt.Dimension(150, 14));
        jLabel9.setPreferredSize(new java.awt.Dimension(150, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        jPanelFields1.add(jLabel9, gridBagConstraints);

        jComboBoxDecimals.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4" }));
        jComboBoxDecimals.setMaximumSize(new java.awt.Dimension(130, 20));
        jComboBoxDecimals.setMinimumSize(new java.awt.Dimension(130, 20));
        jComboBoxDecimals.setPreferredSize(new java.awt.Dimension(130, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields1.add(jComboBoxDecimals, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelBody.add(jPanelFields1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelGeneral.add(jPanelBody, gridBagConstraints);

        jTabbedPane.addTab("General Preferences", jPanelGeneral);

        jPanelDocument.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(246, 246, 246)));
        jPanelDocument.setPreferredSize(new java.awt.Dimension(415, 432));
        jPanelDocument.setLayout(new java.awt.GridBagLayout());

        jPanelButtons1.setBackground(new java.awt.Color(246, 246, 246));
        jPanelButtons1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(203, 209, 213)));
        jPanelButtons1.setLayout(new java.awt.GridBagLayout());

        jButtonSaveD.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jButtonSaveD.setText("Save");
        jButtonSaveD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveDActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons1.add(jButtonSaveD, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 0.1;
        jPanelDocument.add(jPanelButtons1, gridBagConstraints);

        jLabelHelp5.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp5.setToolTipText("<html>If checked, the documents will display the values\n<br>including taxes in the Amount column</html>");
        jLabelHelp5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp5MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp5MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp5, gridBagConstraints);

        jCheckBoxTotalWithTaxes.setText("Add taxes to the values in the Amount column");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxTotalWithTaxes, gridBagConstraints);

        jCheckBoxAddress.setText("Show shipping address and billing address on documents");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxAddress, gridBagConstraints);

        jLabelHelp7.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp7.setToolTipText("<html>If checked, the shipping address will be shown on your\n<br>documents even if it is the same as the billing address</html>");
        jLabelHelp7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp7MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp7MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp7, gridBagConstraints);

        jCheckBoxTotalWithoutDecimals.setText("Total without decimals (round it off)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxTotalWithoutDecimals, gridBagConstraints);

        jLabelHelp10.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp10.setToolTipText("<html>If checked, the Total amount on Invoices and Quotations \n<br>will be rounded off mathematically. The amount will round down\n<br>decimals smaller than or equal to .49, and round up decimals\n<br>greater than or equal to .50</html>");
        jLabelHelp10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp10MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp10MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp10, gridBagConstraints);

        jCheckBoxTotalInWords.setText("Show Total in words");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxTotalInWords, gridBagConstraints);

        jLabelHelp11.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp11.setToolTipText("<html>If checked, the invoiced amount will be shown in words\n<br>beneath the total numeric value. If the value is not \n<br>rounded off, decimals will also be shown in words.</html>");
        jLabelHelp11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp11MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp11, gridBagConstraints);

        jCheckBoxShowSignature.setText("Show Authorized Signatory on documents");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxShowSignature, gridBagConstraints);

        jLabelHelp12.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp12.setToolTipText("<html>If checked, Invoices and Quotations will display a field\n<br>named \"Authorized Signatory\" in the lower left section.\n</html>");
        jLabelHelp12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp12MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp12MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp12, gridBagConstraints);

        jCheckBoxTaxPercentage.setText("Show tax details in Tax column");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxTaxPercentage, gridBagConstraints);

        jLabelHelp13.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp13.setToolTipText("<html>If checked, the tax percentage will be shown in printed\n<br>documents under the tax amount.</html>");
        jLabelHelp13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp13MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp13MouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp13, gridBagConstraints);

        jCheckBoxShowShipping.setText("Add Shipping and Packaging costs");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxShowShipping, gridBagConstraints);

        jLabelHelp14.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp14.setToolTipText("<html>If checked, a new cost for \"Shipping and Packaging\" will be added\n<br>to your document. You can set the amount from the invoice editor.</html>");
        jLabelHelp14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp14MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp14MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp14, gridBagConstraints);

        jLabelHelp15.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp15.setToolTipText("<html> If checked, you will be able to add a custom payment link to your invoice.<br>This will replace the standard PayPal setting and on the document,<br>the link will be shown as \"Pay Online Now\"</html>");
        jLabelHelp15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp15MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp15MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp15, gridBagConstraints);

        jCheckBoxReplacePaypal.setText("<html>Replace <b>Get Paid Online (PayPal)</b> option with custom link<html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxReplacePaypal, gridBagConstraints);

        jCheckBoxHideAmountDue.setText("<html>Hide <b>Amount Due</b><html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxHideAmountDue, gridBagConstraints);

        jLabelHelp16.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp16.setToolTipText("<html>If checked, Invoices and Quotations will no longer show the \"Amount Due\" line</html>");
        jLabelHelp16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp16MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp16MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp16, gridBagConstraints);

        jCheckBoxIndianFormat.setText("Use Indian formatting");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxIndianFormat, gridBagConstraints);

        jLabelHelp18.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp18.setToolTipText("<html>If checked, large numbers will be formatted\n<br>according to Indian standards (ex: 350.000 will be 3.50.000)\n<br>and when written in words, <b>Hundred Thousand</b> will be <b>Lakh</b>.</html>");
        jLabelHelp18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp18MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp18MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp18, gridBagConstraints);

        jLabelHelp19.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp19.setToolTipText("<html>If checked, a Document Number will be with prefix. <br> eg. Invoice FF50</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jLabelHelp19, gridBagConstraints);

        jCheckBoxDocumentPrefix.setText("Activate Document Number Prefix");
        jCheckBoxDocumentPrefix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDocumentPrefixActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxDocumentPrefix, gridBagConstraints);

        jCheckBoxDateAsPrefix.setText("Use Invoice date as Prefix (dd-MM-yy)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelDocument.add(jCheckBoxDateAsPrefix, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel14.setText("Use this separator after Prefix");
        jLabel14.setMinimumSize(new java.awt.Dimension(180, 14));
        jLabel14.setPreferredSize(new java.awt.Dimension(180, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        jPanel4.add(jLabel14, gridBagConstraints);

        jComboBoxPrefixSeparator.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "-", "/" }));
        jComboBoxPrefixSeparator.setMinimumSize(new java.awt.Dimension(60, 20));
        jComboBoxPrefixSeparator.setPreferredSize(new java.awt.Dimension(60, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jComboBoxPrefixSeparator, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDocument.add(jPanel4, gridBagConstraints);

        jLabelHelp20.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp20.setToolTipText("<html>Text needed here</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        jPanelDocument.add(jLabelHelp20, gridBagConstraints);

        jLabelHelp21.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp21.setToolTipText("<html>Text needed here</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        jPanelDocument.add(jLabelHelp21, gridBagConstraints);

        jTabbedPane.addTab("Document Preferences", jPanelDocument);

        jPanel3.setMinimumSize(new java.awt.Dimension(487, 394));
        jPanel3.setPreferredSize(new java.awt.Dimension(487, 394));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Invoice Title");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Quotation Title");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Product/Service Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Quantity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Unit Price");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel6, gridBagConstraints);

        jTextFieldInvoice.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldInvoice.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldInvoice, gridBagConstraints);

        jTextFieldEstimate.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldEstimate.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldEstimate, gridBagConstraints);

        jTextFieldProduct.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldProduct.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldProduct, gridBagConstraints);

        jTextFieldQuantity.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldQuantity.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldQuantity, gridBagConstraints);

        jTextFieldPrice.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldPrice.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldPrice, gridBagConstraints);

        jTextFieldShipping.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldShipping.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldShipping, gridBagConstraints);

        jLabel8.setText("Shipping and Packaging");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel8, gridBagConstraints);

        jLabel10.setText("UoM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel10, gridBagConstraints);

        jTextFieldUoM.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldUoM.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldUoM, gridBagConstraints);

        jLabel11.setText("Tax");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel11, gridBagConstraints);

        jTextFieldTax.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldTax.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldTax, gridBagConstraints);

        jCheckBoxShowQuantity.setText("Show Quantity Column");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jCheckBoxShowQuantity, gridBagConstraints);

        jCheckBoxShowTax.setText("Show Tax  Column");
        jCheckBoxShowTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowTaxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jCheckBoxShowTax, gridBagConstraints);

        jCheckBoxShowUnitPrice.setText("Show Unit Price Column");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jCheckBoxShowUnitPrice, gridBagConstraints);

        jCheckBoxShowUoM.setText("Show UoM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jCheckBoxShowUoM, gridBagConstraints);

        jLabel12.setText("PO Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jTextFieldPONumber, gridBagConstraints);

        jLabel13.setText("Delivery Note amount column");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel13, gridBagConstraints);
        jLabel13.getAccessibleContext().setAccessibleName("Remove Amount column \\nfrom delivery note");

        jCheckBoxDNAmountColumn.setText("Show");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel2.add(jCheckBoxDNAmountColumn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jPanel2, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(253, 253, 253));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(203, 209, 213)));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Document Labels (labels to appear on your printed documents)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabelHelp8.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp8.setToolTipText("<html>The labels shown in the boxes will appear on your printed documents. e.g.\n<br>You can use <b>Rate</b> instead of <b>Unit Price</b> by changing the text in the box. If\n<br>you change the <b>Estimate title</b> to <b>Order</b>, all labels on your printed document\n<br>will be adjusted as <b>Total Order</b>, <b>Order Date</b> a.s.o.</html>");
        jLabelHelp8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp8MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabelHelp8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 2);
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanelButtons2.setBackground(new java.awt.Color(246, 246, 246));
        jPanelButtons2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(203, 209, 213)));
        jPanelButtons2.setLayout(new java.awt.GridBagLayout());

        jButtonSaveD1.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jButtonSaveD1.setText("Save");
        jButtonSaveD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveD1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons2.add(jButtonSaveD1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 0.1;
        jPanel3.add(jPanelButtons2, gridBagConstraints);

        jTabbedPane.addTab("Document Labels", jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanelContent.add(jTabbedPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelContent, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveGActionPerformed
        save();
    }//GEN-LAST:event_jButtonSaveGActionPerformed

    private void jLabelHelpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelpMouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelpMouseExited

    private void jLabelHelpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelpMouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelpMouseEntered

    private void jLabelHelp1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp1MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp1MouseExited

    private void jLabelHelp1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp1MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp1MouseEntered

    private void jLabelHelp2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp2MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp2MouseExited

    private void jLabelHelp2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp2MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp2MouseEntered

    private void jLabelHelp3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp3MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp3MouseExited

    private void jLabelHelp3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp3MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp3MouseEntered

    private void jLabelHelp4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp4MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp4MouseExited

    private void jLabelHelp4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp4MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp4MouseEntered

    private void jLabelHelp5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp5MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp5MouseExited

    private void jLabelHelp5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp5MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp5MouseEntered

    private void jCheckBoxPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPasswordActionPerformed
        Config c = Common.selectedCompanyConfig;
        new JDialogPassword(this, true).setVisible(true);
        jCheckBoxPassword.setSelected(c.get(Config.USE_PASSWORD).equals("true"));

    }//GEN-LAST:event_jCheckBoxPasswordActionPerformed

    private void jLabelHelp6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp6MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp6MouseExited

    private void jLabelHelp6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp6MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp6MouseEntered

    private void jLabelHelp7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp7MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp7MouseExited

    private void jLabelHelp7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp7MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp7MouseEntered

    private void jLabelHelp8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp8MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp8MouseExited

    private void jLabelHelp8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp8MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp8MouseEntered

    private void jLabelHelp9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp9MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp9MouseExited

    private void jLabelHelp9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp9MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp9MouseEntered

    private void jLabelHelp10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp10MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp10MouseEntered

    private void jLabelHelp10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp10MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp10MouseExited

    private void jLabelHelp11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp11MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp11MouseExited

    private void jLabelHelp11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp11MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp11MouseEntered

    private void jLabelHelp12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp12MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp12MouseEntered

    private void jLabelHelp12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp12MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp12MouseExited

    private void jLabelHelp13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp13MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp13MouseExited

    private void jLabelHelp13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp13MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp13MouseEntered

    private void jLabelHelp14MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp14MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp14MouseExited

    private void jLabelHelp14MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp14MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp14MouseEntered

    private void jLabelHelp15MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp15MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp15MouseEntered

    private void jLabelHelp15MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp15MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp15MouseExited

    private void jLabelHelp16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp16MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp16MouseEntered

    private void jLabelHelp16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp16MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp16MouseExited

    private void jLabelHelp17MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp17MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp17MouseEntered

    private void jLabelHelp17MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp17MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp17MouseExited

    private void jCheckBoxShowTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowTaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxShowTaxActionPerformed

    private void jLabelHelp18MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp18MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelHelp18MouseEntered

    private void jLabelHelp18MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp18MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelHelp18MouseExited

    private void jButtonSaveD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveD1ActionPerformed
        save();
    }//GEN-LAST:event_jButtonSaveD1ActionPerformed

    private void jButtonSaveDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveDActionPerformed
        save();
    }//GEN-LAST:event_jButtonSaveDActionPerformed

    private void jCheckBoxDocumentPrefixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDocumentPrefixActionPerformed
        jCheckBoxDateAsPrefix.setEnabled(jCheckBoxDocumentPrefix.isSelected());
        jComboBoxPrefixSeparator.setEnabled(jCheckBoxDocumentPrefix.isSelected());
        jPanelDocument.revalidate();
    }//GEN-LAST:event_jCheckBoxDocumentPrefixActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogFlags.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogFlags.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogFlags.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogFlags.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogFlags dialog = new JDialogFlags(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSaveD;
    private javax.swing.JButton jButtonSaveD1;
    private javax.swing.JButton jButtonSaveG;
    private javax.swing.JCheckBox jCheckBoxAddress;
    private javax.swing.JCheckBox jCheckBoxAskProducts;
    private javax.swing.JCheckBox jCheckBoxDNAmountColumn;
    private javax.swing.JCheckBox jCheckBoxDateAsPrefix;
    private javax.swing.JCheckBox jCheckBoxDocumentPrefix;
    private javax.swing.JCheckBox jCheckBoxHideAmountDue;
    private javax.swing.JCheckBox jCheckBoxIndianFormat;
    private javax.swing.JCheckBox jCheckBoxPDF;
    private javax.swing.JCheckBox jCheckBoxPassword;
    private javax.swing.JCheckBox jCheckBoxReplacePaypal;
    private javax.swing.JCheckBox jCheckBoxSaveProducts;
    private javax.swing.JCheckBox jCheckBoxShowQuantity;
    private javax.swing.JCheckBox jCheckBoxShowShipping;
    private javax.swing.JCheckBox jCheckBoxShowSignature;
    private javax.swing.JCheckBox jCheckBoxShowTax;
    private javax.swing.JCheckBox jCheckBoxShowUnitPrice;
    private javax.swing.JCheckBox jCheckBoxShowUoM;
    private javax.swing.JCheckBox jCheckBoxStocks;
    private javax.swing.JCheckBox jCheckBoxTaxPercentage;
    private javax.swing.JCheckBox jCheckBoxTips;
    private javax.swing.JCheckBox jCheckBoxTotalInWords;
    private javax.swing.JCheckBox jCheckBoxTotalWithTaxes;
    private javax.swing.JCheckBox jCheckBoxTotalWithoutDecimals;
    private javax.swing.JComboBox jComboBoxDateFormat;
    private javax.swing.JComboBox jComboBoxDecimals;
    private javax.swing.JComboBox jComboBoxPrefixSeparator;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelHelp;
    private javax.swing.JLabel jLabelHelp1;
    private javax.swing.JLabel jLabelHelp10;
    private javax.swing.JLabel jLabelHelp11;
    private javax.swing.JLabel jLabelHelp12;
    private javax.swing.JLabel jLabelHelp13;
    private javax.swing.JLabel jLabelHelp14;
    private javax.swing.JLabel jLabelHelp15;
    private javax.swing.JLabel jLabelHelp16;
    private javax.swing.JLabel jLabelHelp17;
    private javax.swing.JLabel jLabelHelp18;
    private javax.swing.JLabel jLabelHelp19;
    private javax.swing.JLabel jLabelHelp2;
    private javax.swing.JLabel jLabelHelp20;
    private javax.swing.JLabel jLabelHelp21;
    private javax.swing.JLabel jLabelHelp3;
    private javax.swing.JLabel jLabelHelp4;
    private javax.swing.JLabel jLabelHelp5;
    private javax.swing.JLabel jLabelHelp6;
    private javax.swing.JLabel jLabelHelp7;
    private javax.swing.JLabel jLabelHelp8;
    private javax.swing.JLabel jLabelHelp9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelBody;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelButtons1;
    private javax.swing.JPanel jPanelButtons2;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelDocument;
    private javax.swing.JPanel jPanelFields;
    private javax.swing.JPanel jPanelFields1;
    private javax.swing.JPanel jPanelGeneral;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTextField jTextFieldEstimate;
    private javax.swing.JTextField jTextFieldInvoice;
    private javax.swing.JTextField jTextFieldPONumber;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldProduct;
    private javax.swing.JTextField jTextFieldQuantity;
    private javax.swing.JTextField jTextFieldShipping;
    private javax.swing.JTextField jTextFieldTax;
    private javax.swing.JTextField jTextFieldUoM;
    // End of variables declaration//GEN-END:variables

    private void save() {
        
        if (jTextFieldInvoice.getText().isEmpty()
                || jTextFieldEstimate.getText().isEmpty()
                || jTextFieldPrice.getText().isEmpty()
                || jTextFieldProduct.getText().isEmpty()
                || jTextFieldQuantity.getText().isEmpty()
                || jTextFieldTax.getText().isEmpty()
                || jTextFieldUoM.getText().isEmpty()
                || jTextFieldPONumber.getText().isEmpty()) {
            Messages.showErrorMessage(this, "Please supply valid document labels!", "Error");
            return;
        }
        
        Config c = Common.selectedCompanyConfig;
        c.set(Config.AUTOSAVE_DOCUMENTS, jCheckBoxPDF.isSelected() ? "true" : "false");
        c.set(Config.TIPS, jCheckBoxTips.isSelected() ? "true" : "false");
        c.set(Config.ASK_PRODUCTS, jCheckBoxAskProducts.isSelected() ? "true" : "false");
        c.set(Config.SAVE_PRODUCTS, jCheckBoxSaveProducts.isSelected() ? "true" : "false");
        c.set(Config.KEEP_STOCKS, jCheckBoxStocks.isSelected() ? "true" : "false");
        c.set(Config.DATE_MASK, jComboBoxDateFormat.getModel().getSelectedItem().toString().replace("mm", "MM"));
        Common.selectedCompanyDateFormat = jComboBoxDateFormat.getModel().getSelectedItem().toString().replace("mm", "MM");
        Common.US_DATE_FORMAT = new SimpleDateFormat(Common.selectedCompanyDateFormat.replace(" ", ""));
        
        try {
            Flag flagLocal = Flag.getLast(Common.connection.getConnection());
            flagLocal.setId(0);
            flagLocal.setValueWithTax(jCheckBoxTotalWithTaxes.isSelected());
            flagLocal.setTotalWithoutDecimals(jCheckBoxTotalWithoutDecimals.isSelected());
            flagLocal.setTotalInWords(jCheckBoxTotalInWords.isSelected());
            flagLocal.setShowSignature(jCheckBoxShowSignature.isSelected());
            flagLocal.setShowTaxPercentage(jCheckBoxTaxPercentage.isSelected());
            flagLocal.setShowAddress(jCheckBoxAddress.isSelected());
            flagLocal.setShowShipping(jCheckBoxShowShipping.isSelected());
            flagLocal.setReplacePaypal(jCheckBoxReplacePaypal.isSelected());
            flagLocal.setHideAmount(jCheckBoxHideAmountDue.isSelected());
            flagLocal.setShowDeliveryNoteAmount(jCheckBoxDNAmountColumn.isSelected());
            flagLocal.setInvoiceLabel(jTextFieldInvoice.getText());
            flagLocal.setEstimateLabel(jTextFieldEstimate.getText());
            flagLocal.setPriceLabel(jTextFieldPrice.getText());
            flagLocal.setProductLabel(jTextFieldProduct.getText());
            flagLocal.setQuantityLabel(jTextFieldQuantity.getText());
            flagLocal.setShippingLabel(jTextFieldShipping.getText());
            flagLocal.setShippingPrice(this.flag.getShippingPrice());
            flagLocal.setUmLabel(jTextFieldUoM.getText());
            flagLocal.setTaxLabel(jTextFieldTax.getText());
            flagLocal.setDecimals(Integer.parseInt(jComboBoxDecimals.getSelectedItem().toString()));
            flagLocal.setReplaceQuantity(!jCheckBoxShowQuantity.isSelected());//the replace feature was removed so this check must be negated for both reading and saving
            flagLocal.setShowUPColumn(jCheckBoxShowUnitPrice.isSelected());
            flagLocal.setShowTaxColumn(jCheckBoxShowTax.isSelected());
            flagLocal.setShowUmColumn(jCheckBoxShowUoM.isSelected());
            flagLocal.setIndianFormat(jCheckBoxIndianFormat.isSelected());
            flagLocal.setPoNumberLabel(jTextFieldPONumber.getText());
            flagLocal.setDocumentPrefix(jCheckBoxDocumentPrefix.isSelected());
            if (jCheckBoxDocumentPrefix.isSelected()) {
                flagLocal.setPrefixAsDate(jCheckBoxDateAsPrefix.isSelected());
                flagLocal.setPrefixSeparator(jComboBoxPrefixSeparator.getModel().getSelectedItem().toString());
            }
            Flag.add(Common.connection.getConnection(), flagLocal);
            Common.lastFlag = flagLocal;
        } catch (SBDaoException ex) {
            Logger.getLogger(JDialogFlags.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JDialogFlags.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }
}
