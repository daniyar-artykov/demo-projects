/*
 * JDialogClientConfig.java
 *
 * Created on October 21, 2008, 5:03 PM
 */

package sleekbill.frames;

import javax.swing.ImageIcon;

import sleekbill.Config;
import sleekbill.Messages;
import sleekbill.util.SBSwingUtils;
import sleekbill.utils.Ajutor;
import sleekbill.xmlrpc.Client;

/**
 *
 * @author  flaviu marcu
 */
public class JDialogClientConfig extends javax.swing.JDialog {

    /** Creates new form JDialogClientConfig */
    public JDialogClientConfig(java.awt.Window parent) {
        super(parent, ModalityType.TOOLKIT_MODAL);
        initComponents();
        setLocationRelativeTo(parent);
        Config c = new Config();
        setTitle("Client retea");
        jTFServer.setText(c.get("server"));
        jTFPort.setText(c.get("port"));
        setIconImage(new ImageIcon("./images/icons/icon.png").getImage());
        setTitle("Conectare la server");
        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.applyFocusBorder(this);
    }

    public JDialogClientConfig(java.awt.Window parent, String message) {
        this(parent);
        jLabel1.setText(message);
    }
    
    public JDialogClientConfig(java.awt.Window parent,boolean hideLabel) {
        this(parent);
        jLabel1.setVisible(false);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPCleft1 = new javax.swing.JPanel();
        jTFServer = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTFPort = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPButtonsDateFirma1 = new javax.swing.JPanel();
        jBSalveazaServer = new javax.swing.JButton();
        jBExit = new javax.swing.JButton();
        jBHelp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(450, 183));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPCleft1.setBorder(javax.swing.BorderFactory.createTitledBorder("Server"));
        jPCleft1.setPreferredSize(new java.awt.Dimension(400, 200));
        jPCleft1.setLayout(new java.awt.GridBagLayout());

        jTFServer.setName("tfServer"); // NOI18N
        jTFServer.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 18, 7);
        jPCleft1.add(jTFServer, gridBagConstraints);

        jLabel17.setText("Adresa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 2);
        jPCleft1.add(jLabel17, gridBagConstraints);

        jTFPort.setText("8080");
        jTFPort.setName("tfPort"); // NOI18N
        jTFPort.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 18, 8);
        jPCleft1.add(jTFPort, gridBagConstraints);

        jLabel18.setText("Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPCleft1.add(jLabel18, gridBagConstraints);

        jPButtonsDateFirma1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPButtonsDateFirma1.setPreferredSize(new java.awt.Dimension(165, 36));
        jPButtonsDateFirma1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

        jBSalveazaServer.setText("Conectare");
        jBSalveazaServer.setName("bSalveazaServer"); // NOI18N
        jBSalveazaServer.setIcon(new ImageIcon("./images/buttons/disks.gif"));
        jBSalveazaServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalveazaServerActionPerformed(evt);
            }
        });
        jPButtonsDateFirma1.add(jBSalveazaServer);

        jBExit.setText("Iesire din aplicatie");
        jBExit.setName("bExit"); // NOI18N
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });
        jPButtonsDateFirma1.add(jBExit);

        jBHelp.setText("Ajutor");
        jBHelp.setName("bHelp"); // NOI18N
        jBHelp.setIcon(new ImageIcon("./images/buttons/help.png"));
        jBHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHelpActionPerformed(evt);
            }
        });
        jPButtonsDateFirma1.add(jBHelp);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPCleft1.add(jPButtonsDateFirma1, gridBagConstraints);

        jLabel1.setForeground(java.awt.Color.red);
        jLabel1.setText("Legatura cu server-ul nu a reusit!");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPCleft1.add(jLabel1, gridBagConstraints);

        getContentPane().add(jPCleft1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jBSalveazaServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalveazaServerActionPerformed
    try{
        Config c = new Config();
        Integer.parseInt(jTFPort.getText());
        if(jTFServer.getText().trim().equals("")) {
            Messages.showErrorMessage(this, "Trebuie sa introduceti o adresa valida!", "Client retea");
            return;
        }
        c.set("server", jTFServer.getText());
        c.set("port", jTFPort.getText().trim());
//        Messages.showOkMessage(this, "Datele de legatura cu serverul au fost salvate.", "Client retea");
        dispose();
        //try server
        Client.resetFactory();
    }
    catch(NumberFormatException nfe){
        Messages.showErrorMessage(this, "Portul trebuie sa fie un numar valid intre 1 si 65535", "Eroare setare port");
    }
}//GEN-LAST:event_jBSalveazaServerActionPerformed

private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
    System.exit(0);
}//GEN-LAST:event_jBExitActionPerformed

private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    jBSalveazaServerActionPerformed(null);
}//GEN-LAST:event_formWindowClosing

private void jBHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHelpActionPerformed
	if (java.awt.Desktop.isDesktopSupported()) {
        try {
            Ajutor.getLinkAjutor(Ajutor.CONFIGURARE_RETEA);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}//GEN-LAST:event_jBHelpActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final JDialogClientConfig dialog = new JDialogClientConfig(null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBExit;
    private javax.swing.JButton jBHelp;
    private javax.swing.JButton jBSalveazaServer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPButtonsDateFirma1;
    private javax.swing.JPanel jPCleft1;
    private javax.swing.JTextField jTFPort;
    private javax.swing.JTextField jTFServer;
    // End of variables declaration//GEN-END:variables

}
