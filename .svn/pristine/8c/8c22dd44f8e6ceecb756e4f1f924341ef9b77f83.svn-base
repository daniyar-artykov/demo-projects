/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.dao.DaoManager;
import com.j256.ormlite.stmt.UpdateBuilder;
import java.math.BigDecimal;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import sleekbill.Common;
import static sleekbill.Common.educationCess;
import static sleekbill.Common.sheCess;
import static sleekbill.Common.sbCess;
import sleekbill.Messages;

import sleekbill.beans.Product;
import sleekbill.beans.Tax;
import sleekbill.entities.ProductEntity;
import sleekbill.util.SBSwingUtils;

/**
 *
 * @author Andrei
 */
public class JDialogEditTax extends javax.swing.JDialog {

    Tax tax = null;
	public Tax savedTax = null;

    /**
     * Creates new form JDialogCityData
     */
    public JDialogEditTax(java.awt.Frame parent, boolean modal, Tax tax) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);

        this.tax = tax;
        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.applyFocusBorder(this);
        SBSwingUtils.setDecimalField(jTextFieldValue, 3);
        
        jTextFieldTax.setText(tax.getTaxName());
        jTextFieldValue.setText(tax.getTaxPercentage().toString());
		
		jTextFieldTax.setEnabled(tax.getId() != Common.educationCess.getId() && tax.getId() != Common.sheCess.getId() && tax.getId() != Common.sbCess.getId());

        setMandatory();
        checkMandatory();
    }

    public JDialogEditTax(java.awt.Dialog parent, boolean modal, Tax tax) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);

        this.tax = tax;
        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.applyFocusBorder(this);
        SBSwingUtils.setDecimalField(jTextFieldValue, 3);

        jTextFieldTax.setText(tax.getTaxName());
        jTextFieldValue.setText(tax.getTaxPercentage().toString());
		
		jTextFieldTax.setEnabled(tax.getId() != Common.educationCess.getId() && tax.getId() != Common.sheCess.getId() && tax.getId() != Common.sbCess.getId());

        setMandatory();
        checkMandatory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelSuper = new javax.swing.JPanel();
        jPanelSuperContent = new javax.swing.JPanel();
        jPanelContent = new javax.swing.JPanel();
        jPanelFields = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTax = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldValue = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanelButtons = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jPanelTitle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Tax");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelSuper.setBackground(new java.awt.Color(229, 235, 242));
        jPanelSuper.setLayout(new java.awt.GridBagLayout());

        jPanelSuperContent.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(195, 210, 219), 1, true));
        jPanelSuperContent.setLayout(new java.awt.GridBagLayout());

        jPanelContent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 209, 213)));
        jPanelContent.setLayout(new java.awt.GridBagLayout());

        jPanelFields.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(203, 209, 213)));
        jPanelFields.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Tax Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jLabel2, gridBagConstraints);

        jTextFieldTax.setName("tfCity"); // NOI18N
        jTextFieldTax.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jTextFieldTax, gridBagConstraints);

        jLabel5.setText("Tax Percentage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jLabel5, gridBagConstraints);

        jTextFieldValue.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jTextFieldValue, gridBagConstraints);

        jLabel3.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanelFields.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanelContent.add(jPanelFields, gridBagConstraints);

        jPanelButtons.setBackground(new java.awt.Color(246, 246, 246));
        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jButtonSave.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jButtonSave.setText("Save");
        jButtonSave.setName("bSave"); // NOI18N
        jButtonSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSaveMouseClicked(evt);
            }
        });
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelContent.add(jPanelButtons, gridBagConstraints);

        jPanelTitle.setBackground(new java.awt.Color(253, 253, 253));
        jPanelTitle.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Tax Information");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelTitle.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelContent.add(jPanelTitle, gridBagConstraints);

        jPanelSuperContent.add(jPanelContent, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanelSuper.add(jPanelSuperContent, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelSuper, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        savedTax=null;
		try {
            if (hasLettersOrNonNumbers(jTextFieldValue.getText())) {
                Messages.showWarningMessage(this, "Please supply a number between 0 and 100!", "Warning");
                jTextFieldValue.requestFocus();
                jTextFieldValue.selectAll();
                return;
            }

            BigDecimal percentage = new BigDecimal(jTextFieldValue.getText());

            if (!(percentage.compareTo(BigDecimal.ZERO) >= 0 && percentage.compareTo(new BigDecimal(100)) <= 0)) {
                Messages.showWarningMessage(this, "The percentage must be between 1 and 100!", "Warning");
                jTextFieldValue.requestFocus();
                jTextFieldValue.selectAll();
                return;
            }

            if (!jTextFieldTax.getText().equals(tax.getTaxName())) {
				if (null != Tax.getExact(Common.connection.getConnection(), jTextFieldTax.getText())) {
					if (Messages.showQuestionMessage(this, "<html><center>A tax with this name already exists.<br>Would you like to add another one with the same name?</center></html>", "Warning") != JOptionPane.YES_OPTION) {
						return;
					}
				}
			}
            
            tax.setDeleted("y");
            tax.update();
            
            Tax newTax = new Tax();
            newTax.setTaxName(jTextFieldTax.getText());
            newTax.setTaxPercentage(new BigDecimal(jTextFieldValue.getText()));
            newTax.setIsDefaultTax(tax.isDefaultTax());
            newTax.create();
            
            try {
                Dao<ProductEntity, Integer> invoiceDao = DaoManager.createDao(Common.connection.getConnection(), ProductEntity.class);
                UpdateBuilder<ProductEntity, Integer> updateBuilder = invoiceDao.updateBuilder();
                updateBuilder.updateColumnValue(Product.TAX_ID, newTax.getId());
                updateBuilder.where().eq(Product.TAX_ID, tax.getId());
                updateBuilder.update();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            
            tax = newTax;
			savedTax = newTax;
            educationCess = new Tax(Tax.getEducationCess(Common.connection.getConnection()));
			sheCess = new Tax(Tax.getSheCess(Common.connection.getConnection()));
			sbCess = new Tax(Tax.getSBCess(Common.connection.getConnection()));
            dispose();
        } catch (Exception e) {
            Messages.showErrorMessage(this, "Error adding record: " + e.getMessage(), "Error");
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveMouseClicked
        if (jTextFieldTax.getText().isEmpty() || jTextFieldValue.getText().isEmpty()) {
            Messages.showWarningMessage(this, "The fields \"Tax Name\" and \"Tax Percentage\" are mandatory!", "Warning");
            return;
        }
    }//GEN-LAST:event_jButtonSaveMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogEditTax.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogEditTax.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogEditTax.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogEditTax.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogEditTax dialog = new JDialogEditTax(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelFields;
    private javax.swing.JPanel jPanelSuper;
    private javax.swing.JPanel jPanelSuperContent;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JTextField jTextFieldTax;
    private javax.swing.JTextField jTextFieldValue;
    // End of variables declaration//GEN-END:variables

    private void setMandatory() {
        jTextFieldTax.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });

        jTextFieldValue.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
    }

    private void checkMandatory() {
        String taxname = jTextFieldTax.getText();
        String taxvalue = jTextFieldValue.getText();

        if ((taxname == null || taxname.trim().isEmpty())
                || (taxvalue == null || taxvalue.trim().isEmpty())) {
            jButtonSave.setEnabled(false);
            return;
        }
        jButtonSave.setEnabled(true);
    }

    public boolean hasLettersOrNonNumbers(String s) {
        if (s == null) {
            return false;
        }
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            boolean bResult = false;
            if (Character.isLetter(c)) {
                bResult = true;
            }
            if (!Character.isDigit(c)) {
                bResult = true;
            }
            if (bResult && c != '.') {
                return true;
            }
        }
        return false;
    }

    public Tax getTax() {
        return tax;
    }
}
