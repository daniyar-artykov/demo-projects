/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.swingutils;

import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Composite;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Paint;
import java.awt.RenderingHints;
import java.awt.geom.RoundRectangle2D;

import javax.swing.ImageIcon;

/**
 *
 * @author Tonia
 */
public class JSelectFormatPanel extends javax.swing.JPanel {

    protected Image image = new ImageIcon("./images/dialogs/ico_selected_small.png").getImage();
    private Color startGradient = new Color(247, 251, 254);
    private Color endGradient = new Color(28, 144, 240);
    private float alpha = 0.2f;
    private boolean selected = false;

    public JSelectFormatPanel() {
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);

        if(!selected) return;
        
        Graphics2D g2d = (Graphics2D) g;
        Paint oldPaint = g2d.getPaint();
        Composite oldComposite = g2d.getComposite();
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
        g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        
        int imgWidth = image.getWidth(null);
        int imgHeight = image.getHeight(null);

        GradientPaint paint = new GradientPaint(0, 0, startGradient, getSize().width, getSize().height, endGradient);
        AlphaComposite newComposite = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha);
        g2d.setComposite(newComposite);
        g2d.setPaint(paint);
        g2d.fill(new RoundRectangle2D.Double(2, 2, getSize().width-2, getSize().height-2, 0, 0));
        g2d.setPaint(oldPaint);
        g2d.setComposite(oldComposite);

        g2d.drawImage(image, (int) (getSize().width - imgWidth),
                (int) (getSize().height - imgHeight),
                (int) (imgWidth-2), (int) (imgWidth-2), null);
    }
    
    public void setSelected(boolean selected) {
        this.selected = selected;
        repaint();
    }
}
