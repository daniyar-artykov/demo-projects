/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.dao.DaoManager;
import com.j256.ormlite.stmt.UpdateBuilder;
import java.awt.Cursor;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import sleekbill.Common;
import sleekbill.Messages;
import sleekbill.beans.Flag;
import sleekbill.beans.Invoice;
import sleekbill.beans.InvoicePayment;
import sleekbill.swingutils.SBDatePicker;
import sleekbill.util.SBSwingUtils;
import sleekbill.beans.Payment;
import sleekbill.entities.InvoiceEntity;

/**
 *
 * @author Andrei
 */
public class JDialogPay extends javax.swing.JDialog {

    SBDatePicker dpPay = new SBDatePicker(new Date());
    Invoice invoice;
    boolean modified = false;
	int precision = Common.PRECISION;
    /**
     * Creates new form JDialogPay
     */

    public JDialogPay(java.awt.Dialog parent, boolean modal, Invoice invoice) {
        super(parent, modal);
        initComponents();
        jPanelPayDate.add(dpPay);
        this.invoice = invoice;
		
		try {
			precision = Flag.getLast(Common.connection.getConnection()).getDecimals();
		} catch (Exception ex) {
			ex.printStackTrace();
		}

        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.applyFocusBorder(jPanel1);
        SBSwingUtils.setDecimalField(jTextFieldAmountPaid, precision);
		
		boolean isRoundedOff = invoice.getFlag().isTotalWithoutDecimals();
        
        BigDecimal totalPaidById = InvoicePayment.getTotalPaidById(Common.connection.getConnection(), invoice.getId(), precision);
        BigDecimal totalAll = invoice.getTotalAll().setScale(isRoundedOff ? 0 : precision, RoundingMode.HALF_UP);
        jTextFieldAmountPaid.setText(totalAll.subtract(totalPaidById).setScale(precision, RoundingMode.HALF_UP).toString());
        jTextFieldAmountPaid.requestFocus();
        jTextFieldAmountPaid.selectAll();
		jEditorPaneHisyory.setText(InvoicePayment.getTooltipWithCount(Common.connection.getConnection(), new Invoice(invoice), precision));
		jEditorPaneHisyory.setCaretPosition(0);
		pack();
		setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelContent = new javax.swing.JPanel();
        jPanelOuter = new javax.swing.JPanel();
        jPanelInner = new javax.swing.JPanel();
        jPanelTitle1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanelTitle = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanelButtons = new javax.swing.JPanel();
        jButtonPay = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPaneHisyory = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelPayDate = new javax.swing.JPanel();
        jTextFieldAmountPaid = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxPayment = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaPaymentNotes = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Payment");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelContent.setBackground(new java.awt.Color(229, 235, 242));
        jPanelContent.setLayout(new java.awt.GridBagLayout());

        jPanelOuter.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(195, 210, 219), 1, true));
        jPanelOuter.setLayout(new java.awt.GridBagLayout());

        jPanelInner.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 209, 213)));
        jPanelInner.setLayout(new java.awt.GridBagLayout());

        jPanelTitle1.setBackground(new java.awt.Color(253, 253, 253));
        jPanelTitle1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(203, 209, 213)));
        jPanelTitle1.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("History");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelTitle1.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelInner.add(jPanelTitle1, gridBagConstraints);

        jPanelTitle.setBackground(new java.awt.Color(253, 253, 253));
        jPanelTitle.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(203, 209, 213)));
        jPanelTitle.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Pay Invoice");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelTitle.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        jPanelInner.add(jPanelTitle, gridBagConstraints);

        jPanelButtons.setBackground(new java.awt.Color(246, 246, 246));
        jPanelButtons.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(203, 209, 213)));
        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jButtonPay.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jButtonPay.setText("Pay");
        jButtonPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPayActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons.add(jButtonPay, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons.add(jButtonCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        jPanelInner.add(jPanelButtons, gridBagConstraints);

        jScrollPane2.setBorder(null);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(450, 110));

        jEditorPaneHisyory.setEditable(false);
        jEditorPaneHisyory.setBorder(null);
        jEditorPaneHisyory.setContentType("text/html"); // NOI18N
        jEditorPaneHisyory.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jEditorPaneHisyory.setMinimumSize(new java.awt.Dimension(0, 150));
        jEditorPaneHisyory.setPreferredSize(new java.awt.Dimension(106, 150));
        jScrollPane2.setViewportView(jEditorPaneHisyory);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelInner.add(jScrollPane2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Pay Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel1, gridBagConstraints);

        jPanelPayDate.setMinimumSize(new java.awt.Dimension(80, 20));
        jPanelPayDate.setName("tfData"); // NOI18N
        jPanelPayDate.setPreferredSize(new java.awt.Dimension(10, 20));
        jPanelPayDate.setLayout(new javax.swing.BoxLayout(jPanelPayDate, javax.swing.BoxLayout.LINE_AXIS));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jPanelPayDate, gridBagConstraints);

        jTextFieldAmountPaid.setMinimumSize(new java.awt.Dimension(50, 20));
        jTextFieldAmountPaid.setPreferredSize(new java.awt.Dimension(75, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jTextFieldAmountPaid, gridBagConstraints);

        jLabel16.setText("Amount Paid");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel16, gridBagConstraints);

        jLabel15.setText("Payment Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel15, gridBagConstraints);

        jComboBoxPayment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Credit Card", "Check", "Bank Transfer", "Other" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jComboBoxPayment, gridBagConstraints);

        jLabel17.setText("Notes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel17, gridBagConstraints);

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setPreferredSize(new java.awt.Dimension(150, 50));

        jTextAreaPaymentNotes.setColumns(30);
        jTextAreaPaymentNotes.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextAreaPaymentNotes.setLineWrap(true);
        jTextAreaPaymentNotes.setRows(3);
        jTextAreaPaymentNotes.setWrapStyleWord(true);
        jTextAreaPaymentNotes.setName("taNotes1"); // NOI18N
        jScrollPane3.setViewportView(jTextAreaPaymentNotes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanelInner.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelOuter.add(jPanelInner, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanelContent.add(jPanelOuter, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelContent, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPayActionPerformed
        modified = false;
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
		boolean isRoundedOff = invoice.getFlag().isTotalWithoutDecimals();
        BigDecimal totalPaidById = InvoicePayment.getTotalPaidById(Common.connection.getConnection(), invoice.getId(), precision);
        BigDecimal totalAll = invoice.getTotalAll().setScale(isRoundedOff ? 0 : precision, RoundingMode.HALF_UP);
        BigDecimal paid = BigDecimal.ZERO;
        
        try {
            paid = new BigDecimal(jTextFieldAmountPaid.getText());
        } catch (Exception ex) {
        }
        
        if (totalAll.compareTo(totalPaidById.add(paid)) == -1 && totalAll.compareTo(BigDecimal.ZERO) == 1) {
            if (Messages.showQuestionMessage(this, "<html>The total payment is greater than the invoiced amount!<br>Would you like to continue?", "Confirmation") != JOptionPane.YES_OPTION) {
                jTextFieldAmountPaid.setText(totalAll.subtract(totalPaidById).setScale(precision, RoundingMode.HALF_UP).toString());
                jTextFieldAmountPaid.requestFocus();
                jTextFieldAmountPaid.selectAll();
                setCursor(null);
                return;
            }
        }

        if (paid.compareTo(BigDecimal.ZERO) == 0) {
            Messages.showWarningMessage(this, "The Amount Paid should not be 0.00!", "Warning");
            jTextFieldAmountPaid.setText(totalAll.subtract(totalPaidById).setScale(precision, RoundingMode.HALF_UP).toString());
            jTextFieldAmountPaid.requestFocus();
            jTextFieldAmountPaid.selectAll();

            setCursor(null);
            return;
        }
        
        Payment p = new Payment();
        p.setAmount(paid);
        p.setPayDate(dpPay.getDate());
        p.setType(jComboBoxPayment.getSelectedItem().toString());
        p.setNote(jTextAreaPaymentNotes.getText());
        try {
            p.create();
        } catch (Exception ex) {
            Messages.showErrorMessage(this, ex.getMessage(), "Error");
            setCursor(null);
            return;
        }

        InvoicePayment ip = new InvoicePayment();
        ip.setAmount(paid);
        ip.setInvoice(invoice);
        ip.setPayment(p);
        try {
            ip.create();
        } catch (Exception ex) {
            Messages.showErrorMessage(this, ex.getMessage(), "Error");
            setCursor(null);
            return;
        }
        
        try {
            Dao<InvoiceEntity, Integer> invoiceDao = DaoManager.createDao(Common.connection.getConnection(), InvoiceEntity.class);
            UpdateBuilder<InvoiceEntity, Integer> updateBuilder = invoiceDao.updateBuilder();
            updateBuilder.updateColumnValue(Invoice.IS_PAID, true);
            updateBuilder.where().eq("id", invoice.getId());
            updateBuilder.update();
        } catch (Exception ex) {
            Messages.showErrorMessage(this, ex.getMessage(), "Error");
            setCursor(null);
            return;
        }
        
        setCursor(null);
        modified = true;
        dispose();
    }//GEN-LAST:event_jButtonPayActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    public boolean isModified() {
        return modified;
    }

    public void setModified(boolean modified) {
        this.modified = modified;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonPay;
    private javax.swing.JComboBox jComboBoxPayment;
    private javax.swing.JEditorPane jEditorPaneHisyory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelInner;
    private javax.swing.JPanel jPanelOuter;
    private javax.swing.JPanel jPanelPayDate;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JPanel jPanelTitle1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaPaymentNotes;
    private javax.swing.JTextField jTextFieldAmountPaid;
    // End of variables declaration//GEN-END:variables
}
