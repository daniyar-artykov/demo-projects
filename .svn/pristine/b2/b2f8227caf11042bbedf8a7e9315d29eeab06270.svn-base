/*
 * JDialogDespreProgram.java
 *
 * Created on February 12, 2008, 5:37 PM
 */

package sleekbill.frames;

import java.awt.Color;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.ImageIcon;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import sleekbill.Common;
import sleekbill.Config;
import sleekbill.Messages;
import sleekbill.beans.Tip;

import sleekbill.util.SBSwingUtils;
import sleekbill.utils.SBDesktop;

/**
 *
 * @author  flaviu marcu
 */
public class JDialogTips extends javax.swing.JDialog implements HyperlinkListener {
    
    /** Creates new form JDialogDespreProgram */
    public JDialogTips(java.awt.Frame parent, boolean modal) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(parent);
        jEPText.setText(Tip.getTip(Common.connection.getConnection()));
        jCBTips.setSelected(Common.selectedCompanyConfig.get(Config.TIPS).equals("true"));
        jBIesire.requestFocusInWindow();
        
        initDialog(0 );
        
        SBSwingUtils.addContextMenuToChildren(this);
    }
    

    public JDialogTips(java.awt.Window parent,int id) {
        super(parent, ModalityType.APPLICATION_MODAL);
        initComponents();        
        setLocationRelativeTo(parent);
        initDialog(id);
        jEPText.setText(Tip.getTip(Common.connection.getConnection()));
        if(id<1) {
            jBNext.setVisible(false);
            jCBTips.setVisible(false);
            setTitle("Atentie");
        }
        
        SBSwingUtils.addContextMenuToChildren(this);
    }

	public JDialogTips(java.awt.Window parent, String message) {
		super(parent, ModalityType.APPLICATION_MODAL);
		initComponents();
		setLocationRelativeTo(parent);
		initDialog(-1);
		jEPText.setText(message);
		jBNext.setVisible(false);
		jCBTips.setVisible(false);
		setTitle("Atentie");
                
                SBSwingUtils.addContextMenuToChildren(this);
	}

    public void initDialog(int id) {
        if (id < 1) {
            jLSigla.setIcon(new ImageIcon("./images/dialogs/info_64.png"));
            jLImagine.setIcon(new ImageIcon("./images/dialogs/systray_info_ico.png"));
            //jPMessage.setBorder(new RoundLineBorder(new Color(179, 205, 218)));
            jPMessage.setBackground(new Color(239, 246, 255));
        } else {
            jLSigla.setIcon(new ImageIcon("./images/dialogs/icon_tick.png"));
            jLImagine.setIcon(new ImageIcon("./images/dialogs/tips-green.png"));
            //jPMessage.setBorder(new RoundLineBorder(new Color(158, 215, 164)));
            jPMessage.setBackground(new Color(234, 249, 230));
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelContent = new javax.swing.JPanel();
        jPanelOuter = new javax.swing.JPanel();
        jPanelInner = new javax.swing.JPanel();
        jPButtons = new javax.swing.JPanel();
        jCBTips = new javax.swing.JCheckBox();
        jBNext = new javax.swing.JButton();
        jBIesire = new javax.swing.JButton();
        jPMessage = new javax.swing.JPanel();
        jLSigla = new javax.swing.JLabel();
        jEPText = new javax.swing.JEditorPane();
        jLImagine = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tips");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelContent.setBackground(new java.awt.Color(229, 235, 242));
        jPanelContent.setLayout(new java.awt.GridBagLayout());

        jPanelOuter.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(195, 210, 219), 1, true));
        jPanelOuter.setForeground(new java.awt.Color(195, 210, 219));
        jPanelOuter.setLayout(new java.awt.GridBagLayout());

        jPanelInner.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 209, 213)));
        jPanelInner.setLayout(new java.awt.GridBagLayout());

        jPButtons.setBackground(new java.awt.Color(246, 246, 246));
        jPButtons.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(203, 209, 213)));
        jPButtons.setLayout(new java.awt.GridBagLayout());

        jCBTips.setSelected(true);
        jCBTips.setText("Show tips when program starts");
        jCBTips.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCBTips.setOpaque(false);
        jCBTips.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBTipsItemStateChanged(evt);
            }
        });
        jCBTips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTipsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPButtons.add(jCBTips, gridBagConstraints);

        jBNext.setText("Next Tip");
        jBNext.setIcon(new ImageIcon("./images/buttons/nav_ico_new.png"));
        jBNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPButtons.add(jBNext, gridBagConstraints);

        jBIesire.setText("Close");
        jBIesire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIesireActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPButtons.add(jBIesire, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        jPanelInner.add(jPButtons, gridBagConstraints);

        jPMessage.setPreferredSize(new java.awt.Dimension(580, 175));
        jPMessage.setLayout(new java.awt.GridBagLayout());

        jLSigla.setBackground(new java.awt.Color(255, 255, 255));
        jLSigla.setPreferredSize(new java.awt.Dimension(90, 90));
        jLSigla.setIcon(new ImageIcon("./images/dialogs/icon_info.png"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPMessage.add(jLSigla, gridBagConstraints);

        jEPText.setEditable(false);
        jEPText.setContentType("text/html"); // NOI18N
        jEPText.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jEPText.setOpaque(false);
        jEPText.addHyperlinkListener(this);
        jEPText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEPTextKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 15, 0);
        jPMessage.add(jEPText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 0.01;
        gridBagConstraints.weighty = 0.01;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 1, 1);
        jPMessage.add(jLImagine, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.01;
        gridBagConstraints.weighty = 0.01;
        jPanelInner.add(jPMessage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelOuter.add(jPanelInner, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanelContent.add(jPanelOuter, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelContent, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBIesireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIesireActionPerformed
        dispose();
    }//GEN-LAST:event_jBIesireActionPerformed

    private void jCBTipsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBTipsItemStateChanged
    }//GEN-LAST:event_jCBTipsItemStateChanged

    private void jBNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNextActionPerformed
        jEPText.setText(Tip.getTip(Common.connection.getConnection()));
    }//GEN-LAST:event_jBNextActionPerformed

    private void jCBTipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTipsActionPerformed
        if (!jCBTips.isSelected()) {
            Messages.showOkMessage(this, "<html>You can enable the tips in the <b>Preferences</b> menu<html>", "Information");
            Common.selectedCompanyConfig.set(Config.TIPS, "false");
        } else {
            Common.selectedCompanyConfig.set(Config.TIPS, "true");
        }
    }//GEN-LAST:event_jCBTipsActionPerformed

    private void jEPTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEPTextKeyPressed
    }//GEN-LAST:event_jEPTextKeyPressed
    
    
    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JDialogTips(null, true).setVisible(true);
            }
        });
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBIesire;
    private javax.swing.JButton jBNext;
    private javax.swing.JCheckBox jCBTips;
    private javax.swing.JEditorPane jEPText;
    private javax.swing.JLabel jLImagine;
    private javax.swing.JLabel jLSigla;
    private javax.swing.JPanel jPButtons;
    private javax.swing.JPanel jPMessage;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelInner;
    private javax.swing.JPanel jPanelOuter;
    // End of variables declaration//GEN-END:variables

    @Override
    public void hyperlinkUpdate(HyperlinkEvent e) {
        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            URI uri;
            try {
//                uri = new URI("http://www.program-facturi.ro/client-retea/");
				uri = new URI(e.getDescription());
//                java.awt.Desktop.getDesktop().browse(uri);
				SBDesktop.browse(uri);
            } catch (UnsupportedEncodingException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                //ex.printStackTrace();
            } catch (URISyntaxException ex) {
                ex.printStackTrace();
            }
        }
    }
    
}
