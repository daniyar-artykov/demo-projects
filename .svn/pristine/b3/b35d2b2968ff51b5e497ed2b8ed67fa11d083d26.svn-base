/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.util.ArrayList;

import sleekbill.Common;
import sleekbill.beans.State;
import sleekbill.entities.ProductEntity;
import sleekbill.frames.autosuggesterdata.SBACCities;
import sleekbill.swingutils.autosuggesters.AddNewActionListener;
import sleekbill.swingutils.autosuggesters.AutosuggesterDataBuilder;
import sleekbill.swingutils.autosuggesters.AutosuggesterItem;
import sleekbill.swingutils.autosuggesters.DeleteActionListener;

import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.dao.DaoManager;
import com.j256.ormlite.dao.GenericRawResults;
import com.j256.ormlite.dao.RawRowMapper;

/**
 *
 * @author dani
 */
public class TestJDialog extends javax.swing.JDialog {

	SBACCities param = new SBACCities(Common.connection);
        
	public TestJDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
                setLocationRelativeTo(parent);
                createAndShowGui();
                
                pack();
	}
	
	public void createAndShowGui(){
            
		//sBACPanel2.setAddNew(true);
		sBACPanel2.setAddNewActionListener(new AddNewActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO implementat adaugare
				System.out.println("add new: " + e.getActionCommand());
				//dupa adaugare se seteaza numele dou adaugat
				sBACPanel2.getSbTextField().setText("coca cola");
			}
		});
		
		sBACPanel2.setDeleteActionListener(new DeleteActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e, AutosuggesterItem item) {
				System.out.println("delete: " + e.getActionCommand());
			}
		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        sBACPanel2 = new sleekbill.swingutils.autosuggesters.SBACPanelTextField(param, true, true);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        sBACPanelTextArea1 = new sleekbill.swingutils.autosuggesters.SBACPanelTextArea(param, true, true);
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 300));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        sBACPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sBACPanel2FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(sBACPanel2, gridBagConstraints);

        jLabel1.setText("City");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("State");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField1, gridBagConstraints);

        sBACPanelTextArea1.setPreferredSize(new java.awt.Dimension(200, 100));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(sBACPanelTextArea1, gridBagConstraints);

        jLabel3.setText("Text Area test");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jLabel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sBACPanel2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sBACPanel2FocusLost
        //AutosuggesterItem selectedItem = sBACPanel2.getSbTextField().getSelectedItem();
        
        //States state = (States)selectedItem.getObj();
        
        //jTextField1.setText(state.getCountry());
    }//GEN-LAST:event_sBACPanel2FocusLost

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(TestJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(TestJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(TestJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(TestJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				TestJDialog dialog = new TestJDialog(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}
        
        class SBAC implements AutosuggesterDataBuilder {
			
			@Override
			public ArrayList<AutosuggesterItem> getData(String input, Integer rowNumber) {
				ArrayList<AutosuggesterItem> l = new ArrayList<AutosuggesterItem>();
                                final String in = input;
		        try {
					Dao<ProductEntity, Integer> productDao = DaoManager.createDao(
							Common.connection.getConnection(), ProductEntity.class);
                                        
                                        //long x = System.currentTimeMillis();

					GenericRawResults<AutosuggesterItem> rawResults =
						productDao.queryRaw("SELECT " +
							"'<html>' || substr(name,0,CHARINDEX(lower(?), lower(name))) || '<b>' || substr(name,CHARINDEX(lower(?), lower(name)), length(lower(?))) || '</b>' || substr(name,CHARINDEX(lower(?), lower(name)) + length(lower(?))) || ', ' || country ||'</html>' AS den, " +
							"id, name, country " +
							"FROM states " +
							"WHERE name LIKE ? LIMIT " + rowNumber,
							new RawRowMapper<AutosuggesterItem>() {
								public AutosuggesterItem mapRow(String[] columnNames, String[] resultColumns) {
									int id = 0;
									try {
										id = Integer.parseInt(resultColumns[1]);
									} catch (NumberFormatException e) {}
									
									State aux = new State();
									aux.setId(id);
									aux.setState(resultColumns[2]);
									aux.setCountry(resultColumns[3]);

									return new AutosuggesterItem(id, resultColumns[2], resultColumns[0],
											aux, true);
								}
							},
							input, input, input, input, input, "%"+input+"%");
					l.addAll(rawResults.getResults());
                                       //long y = System.currentTimeMillis();
                                       // System.out.println("timp: " + (y - x));
				} catch (SQLException e) {
					e.printStackTrace();
				}
		        
				return l;
			}

        @Override
        public long getCount() {
            return 0;
        }
		}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private sleekbill.swingutils.autosuggesters.SBACPanelTextField sBACPanel2;
    private sleekbill.swingutils.autosuggesters.SBACPanelTextArea sBACPanelTextArea1;
    // End of variables declaration//GEN-END:variables
}
