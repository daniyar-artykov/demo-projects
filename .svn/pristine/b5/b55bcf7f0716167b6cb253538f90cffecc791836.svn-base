/*
 * CheckBoxCellEditor.java
 *
 * Created on November 9, 2007, 1:42 PM
 */

package sleekbill.swingutils;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.AbstractCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.EventListenerList;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author flaviu marcu
 */



public class CheckBoxCellEditor extends AbstractCellEditor implements TableCellEditor,ActionListener {
    JCheckBox jcb;
    boolean selected;
    protected EventListenerList listenerList = new EventListenerList();
    protected ChangeEvent changeEvent = new ChangeEvent(this);
    
    public Object getCellEditorValue() {
        //if(!selected) return new Boolean(!selected);
        return !selected;
    }

    public void actionPerformed(ActionEvent e) {        
        fireEditingStopped();
    }

    
    public Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int row,int column) {
        jcb = new JCheckBox();
        jcb.setBorder(new EmptyBorder(1, 2, 1, 2));
        if (isSelected) {
            jcb.setForeground(table.getSelectionForeground());
            jcb.setBackground(table.getSelectionBackground());
        } 
        else {
            if(UIManager.get("Table.evenRowColor") instanceof Color &&  UIManager.get("Table.evenRowColor") instanceof Color) {
                Color rc = row%2==0? (Color)UIManager.get("Table.evenRowColor"):(Color)UIManager.get("Table.oddRowColor");            
                jcb.setForeground(rc);
                jcb.setBackground(rc);
            }
            else {
                jcb.setForeground(table.getForeground());
                jcb.setBackground(table.getBackground());            
            }
        } 
        
        jcb.setBorderPainted(true);
        jcb.setHorizontalAlignment(SwingConstants.RIGHT);
        jcb.addActionListener(this);
        selected = ((Boolean)value).booleanValue();
        return jcb;
    }      
    
}