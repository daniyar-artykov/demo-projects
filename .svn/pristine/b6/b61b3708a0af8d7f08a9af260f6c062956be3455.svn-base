/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogPopupInfo.java
 *
 * Created on Nov 26, 2010, 2:31:12 PM
 */

package sleekbill.swingutils;

import java.awt.event.MouseListener;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

import sleekbill.Config;

/**
 *
 * @author flaviu m
 */
public class JDialogPopupInfo extends javax.swing.JDialog {

	String url = "";
	String configVar = "";

	/** Creates new form JDialogPopupInfo */
    public JDialogPopupInfo(java.awt.Frame parent, String image, String url,
			String configVar, boolean modal) {
        super(parent, modal);
        initComponents();

		this.url = url;
		if(this.url == null || this.url.isEmpty()) {
			MouseListener[] ls = jLSigla.getMouseListeners();
			for (MouseListener mouseListener : ls) {
				jLSigla.removeMouseListener(mouseListener);
			}
			jLSigla.setCursor(null);
		}
		this.configVar = configVar;
		try {
			//		jLSigla.setIcon(new ImageIcon(image));
			jLSigla.setIcon(new ImageIcon(ImageIO.read(new File(image))));
		} catch (IOException ex) {
			Logger.getLogger(JDialogPopupInfo.class.getName()).log(Level.SEVERE, null, ex);
		}
		if("false".equals(new Config().get(this.configVar))) {
			jCBHide.setSelected(true);
		}

        pack();
        setLocationRelativeTo(parent);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jEPText = new javax.swing.JEditorPane();
        jBMaiTarziu = new javax.swing.JButton();
        jLSigla = new javax.swing.JLabel();
        jCBHide = new javax.swing.JCheckBox();

        jEPText.setBackground(new java.awt.Color(255, 255, 204));
        jEPText.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        jEPText.setContentType("text/html"); // NOI18N
        jEPText.setEditable(false);
        jEPText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEPTextKeyPressed(evt);
            }
        });

        jBMaiTarziu.setText("Inchide");
        jBMaiTarziu.setIcon(new ImageIcon("./images/buttons/Exit.png"));
        jBMaiTarziu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMaiTarziuActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLSigla.setBackground(new java.awt.Color(255, 255, 255));
        jLSigla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLSigla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLSiglaMousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jLSigla, gridBagConstraints);

        jCBHide.setText("Nu mai arata mesajul ");
        jCBHide.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCBHide.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBHideItemStateChanged(evt);
            }
        });
        jCBHide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBHideActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        getContentPane().add(jCBHide, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jEPTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEPTextKeyPressed

}//GEN-LAST:event_jEPTextKeyPressed

    private void jBMaiTarziuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMaiTarziuActionPerformed
        dispose();
}//GEN-LAST:event_jBMaiTarziuActionPerformed

    private void jCBHideItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBHideItemStateChanged

}//GEN-LAST:event_jCBHideItemStateChanged

    private void jCBHideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBHideActionPerformed
        if(!jCBHide.isSelected()) {
            new Config().set(this.configVar, "true");
        } else {
            new Config().set(this.configVar, "false");
		}
}//GEN-LAST:event_jCBHideActionPerformed

	private void jLSiglaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSiglaMousePressed
		openLink();
		dispose();
	}//GEN-LAST:event_jLSiglaMousePressed

	public void openLink() {
		if( java.awt.Desktop.isDesktopSupported() ) {
            java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
            if( desktop.isSupported( java.awt.Desktop.Action.BROWSE ) ) {

                try {
					java.net.URI uri = new java.net.URI(url);
					desktop.browse(uri);
				}catch( Exception ex ) {
                    ex.printStackTrace();
                }
            }
        }
	}
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogPopupInfo dialog = new JDialogPopupInfo(new javax.swing.JFrame(), 
						"", "", "Config.SHOW_POPUP_NEW_VERSION", true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton jBMaiTarziu;
    protected javax.swing.JCheckBox jCBHide;
    protected javax.swing.JEditorPane jEPText;
    protected javax.swing.JLabel jLSigla;
    // End of variables declaration//GEN-END:variables

}
