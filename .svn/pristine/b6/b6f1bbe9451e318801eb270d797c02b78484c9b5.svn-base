/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import java.awt.event.ActionEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;

import javax.swing.ImageIcon;
import sleekbill.Common;

import sleekbill.Messages;
import sleekbill.beans.Tax;
import sleekbill.entities.TaxEntity;
import sleekbill.frames.autosuggesterdata.SBACTaxes;
import sleekbill.frames.autosuggesterdata.SBACUoM;
import sleekbill.frames.autosuggesterdata.actionlisteners.EditTaxActionListener;
import sleekbill.swingutils.autosuggesters.AddNewActionListener;
import sleekbill.swingutils.autosuggesters.AutosuggesterItem;
import sleekbill.util.SBSwingUtils;

/**
 *
 * @author Andrei
 */
public class JDialogEditInvoiceProduct extends javax.swing.JDialog {

    SBACTaxes asData3 = new SBACTaxes();
    SBACUoM asData2 = new SBACUoM(Common.connection);
    int precision = Common.PRECISION;
    String productName;
    BigDecimal quantity;
    BigDecimal price;
    Tax tax;
    String description;
    String measuringUnit;
    BigDecimal discount;
    boolean modifyed = false;
    JDialogEditInvoiceProduct main = this;

    /**
     * Creates new form JDialogEditInvoiceProduct
     */
    public JDialogEditInvoiceProduct(java.awt.Dialog parent, boolean modal, String product, String description, BigDecimal quantity,
            BigDecimal price, Tax tax, BigDecimal discount, String um, int precision, String docType) {
        super(parent, modal);
        initComponents();

        setLocationRelativeTo(parent);

        this.precision = precision;
        this.productName = product;
        this.quantity = quantity.setScale(precision, RoundingMode.HALF_UP);
        this.price = price.setScale(precision, RoundingMode.HALF_UP);
        this.tax = tax;
        this.description = description;
        this.measuringUnit = um;

        //setTitle("Edit " + docType + " Product");
        //jLabel1.setText("Edit " + docType + " Product");
        jTextFieldProductName.setText(product);
        jTextFieldDiscount.setText(discount.setScale(precision, RoundingMode.HALF_UP).toPlainString());
        jTextFieldQuantity.setText(quantity.setScale(precision, RoundingMode.HALF_UP).toPlainString());
        jTextFieldPrice.setText(price.setScale(precision, RoundingMode.HALF_UP).toPlainString());
        jTextAreaDescription.setText(description);
        sBACPanelUoM.setText(um);
        sBACPanelTaxes.setSelectedItem(
                new AutosuggesterItem(tax.getId(), tax.getTaxName() + " %", tax.getTaxPercentage() + "", tax),
                tax.getTaxPercentage() + "");
        setupAddNewListener();
        sBACPanelTaxes.setEditActionListener(new EditTaxActionListener(sBACPanelTaxes, main));

        SBSwingUtils.applyFocusBorder(this);
        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.setDecimalField(jTextFieldPrice, precision);
        SBSwingUtils.setDecimalField(jTextFieldQuantity, precision);
        SBSwingUtils.setDecimalField(jTextFieldDiscount, precision);
        jButtonCancel.setVisible(false);
        jLabel7.setText(jLabel7.getText() + " (" + Common.companyDetails.getCurrency().getCurrencySymbol() + ")");
        pack();
    }

    private void setupAddNewListener() {
        sBACPanelTaxes.setAddNewActionListener(new AddNewActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                AutosuggesterItem aux = sBACPanelTaxes.getSbTextField().getSelectedItem();
                JDialogTaxes taxes = new JDialogTaxes(main, true);
                taxes.setVisible(true);

                if (taxes.lastTax != null) {
                    AutosuggesterItem item = new AutosuggesterItem(taxes.lastTax.getId(), null, null, null);
                    sBACPanelTaxes.setSelectedItem(item, taxes.lastTax.getTaxPercentage().toString());
                } else if (aux != null) {
                    Tax tax = (Tax) aux.getObj();

                    if (tax != null && tax.getTaxPercentage() != null) {
                        sBACPanelTaxes.setSelectedItem(aux, tax.getTaxPercentage().toString());
                    }
                } else {
                    sBACPanelTaxes.getSbTextField().setText("");
                }

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelContent = new javax.swing.JPanel();
        jPanelBorder = new javax.swing.JPanel();
        jPanelUpperBorder = new javax.swing.JPanel();
        jTextFieldQuantity = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        sBACPanelTaxes = new sleekbill.swingutils.autosuggesters.SBACPanelTextField(asData3, true, true, true);
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldProductName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescription = new sleekbill.swingutils.JTABackground();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldDiscount = new javax.swing.JTextField();
        jLabelExcisePercentage = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sBACPanelUoM = new sleekbill.swingutils.autosuggesters.SBACPanelTextField(asData2, false, false, false);
        jPanelLowerBorder = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanelTitle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Product");
        setMinimumSize(new java.awt.Dimension(850, 330));
        setPreferredSize(new java.awt.Dimension(850, 330));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelContent.setBackground(new java.awt.Color(229, 235, 242));
        jPanelContent.setLayout(new java.awt.GridBagLayout());

        jPanelBorder.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(195, 210, 219), 1, true));
        jPanelBorder.setLayout(new java.awt.GridBagLayout());

        jPanelUpperBorder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(203, 209, 213)));
        jPanelUpperBorder.setLayout(new java.awt.GridBagLayout());

        jTextFieldQuantity.setName("tfQuantity"); // NOI18N
        jTextFieldQuantity.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jTextFieldQuantity, gridBagConstraints);

        jTextFieldPrice.setName("tfUnitPrice"); // NOI18N
        jTextFieldPrice.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jTextFieldPrice, gridBagConstraints);

        sBACPanelTaxes.setName("tfTax"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(sBACPanelTaxes, gridBagConstraints);

        jLabel8.setText("Tax");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jLabel8, gridBagConstraints);

        jLabel3.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Quantity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jLabel4, gridBagConstraints);

        jLabel7.setText("Unit Price");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jLabel7, gridBagConstraints);

        jTextFieldProductName.setName("tfQuantity"); // NOI18N
        jTextFieldProductName.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jTextFieldProductName, gridBagConstraints);

        jLabel5.setText("Product or Service");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jLabel5, gridBagConstraints);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextAreaDescription.setColumns(30);
        jTextAreaDescription.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextAreaDescription.setLineWrap(true);
        jTextAreaDescription.setRows(5);
        jTextAreaDescription.setWrapStyleWord(true);
        jTextAreaDescription.setName("taNotes1"); // NOI18N
        jScrollPane1.setViewportView(jTextAreaDescription);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jScrollPane1, gridBagConstraints);

        jLabel9.setText("Add Discount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jLabel9, gridBagConstraints);

        jTextFieldDiscount.setName("tfUnitPrice"); // NOI18N
        jTextFieldDiscount.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jTextFieldDiscount, gridBagConstraints);

        jLabelExcisePercentage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelExcisePercentage.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jLabelExcisePercentage, gridBagConstraints);

        jLabel10.setText("UoM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(jLabel10, gridBagConstraints);

        sBACPanelUoM.setMinimumSize(new java.awt.Dimension(125, 20));
        sBACPanelUoM.setName("tfTax"); // NOI18N
        sBACPanelUoM.setPreferredSize(new java.awt.Dimension(125, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelUpperBorder.add(sBACPanelUoM, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelBorder.add(jPanelUpperBorder, gridBagConstraints);

        jPanelLowerBorder.setBackground(new java.awt.Color(246, 246, 246));
        jPanelLowerBorder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 209, 213)));
        jPanelLowerBorder.setLayout(new java.awt.GridBagLayout());

        jButtonSave.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jButtonSave.setText("Save");
        jButtonSave.setName("bSave"); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelLowerBorder.add(jButtonSave, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.setName("bCancel"); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelLowerBorder.add(jButtonCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelBorder.add(jPanelLowerBorder, gridBagConstraints);

        jPanelTitle.setBackground(new java.awt.Color(253, 253, 253));
        jPanelTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 209, 213)));
        jPanelTitle.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Edit Product");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelTitle.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelBorder.add(jPanelTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanelContent.add(jPanelBorder, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelContent, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        if (!jTextFieldProductName.getText().trim().isEmpty()) {
            productName = jTextFieldProductName.getText();
        } else {
            Messages.showErrorMessage(this, "Please select a product", "Error");
            return;
        }

        try {
            this.quantity = new BigDecimal(jTextFieldQuantity.getText()).setScale(precision, RoundingMode.HALF_UP);
        } catch (NumberFormatException e) {
            Messages.showErrorMessage(this, "Please supply a valid Quantity", "Error");
            return;
        }
        try {
            this.price = new BigDecimal(jTextFieldPrice.getText()).setScale(precision, RoundingMode.HALF_UP);
        } catch (NumberFormatException e) {
            Messages.showErrorMessage(this, "Please supply a valid Unit Price", "Error");
            return;
        }

        AutosuggesterItem selectedItem = sBACPanelTaxes.getSbTextField().getSelectedItem();
        if (selectedItem != null) {
            this.tax = new Tax((TaxEntity) selectedItem.getObj());
        } else {
            Messages.showErrorMessage(this, "Please select a tax", "Error");
            return;
        }

        try {
            this.discount = new BigDecimal(jTextFieldDiscount.getText()).setScale(precision, RoundingMode.HALF_UP);
        } catch (NumberFormatException e) {
            this.discount = BigDecimal.ZERO.setScale(precision, RoundingMode.HALF_UP);
        }

        description = jTextAreaDescription.getText();
        measuringUnit = sBACPanelUoM.getText();
        modifyed = true;
        dispose();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    public boolean isModifyed() {
        return modifyed;
    }

    public String getProduct() {
        return productName;
    }

    public void setProduct(String product) {
        this.productName = product;
    }

    public BigDecimal getQuantity() {
        return quantity;
    }

    public void setQuantity(BigDecimal quantity) {
        this.quantity = quantity;
    }

    public BigDecimal getPrice() {
        return price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    public Tax getTax() {
        return tax;
    }

    public void setTax(Tax tax) {
        this.tax = tax;
    }

    public void setModifyed(boolean modifyed) {
        this.modifyed = modifyed;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getMeasuringUnit() {
        return measuringUnit;
    }

    public void setMeasuringUnit(String measuringUnit) {
        this.measuringUnit = measuringUnit;
    }

    public BigDecimal getDiscount() {
        return discount;
    }

    public void setDiscount(BigDecimal discount) {
        this.discount = discount;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogEditInvoiceProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogEditInvoiceProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogEditInvoiceProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogEditInvoiceProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogEditInvoiceProduct dialog = new JDialogEditInvoiceProduct(new javax.swing.JDialog(), true,
                        "", "", BigDecimal.ZERO, BigDecimal.ZERO, new Tax(), BigDecimal.ZERO, "um", 2, "Manual");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelExcisePercentage;
    private javax.swing.JPanel jPanelBorder;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelLowerBorder;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JPanel jPanelUpperBorder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldDiscount;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldProductName;
    private javax.swing.JTextField jTextFieldQuantity;
    private sleekbill.swingutils.autosuggesters.SBACPanelTextField sBACPanelTaxes;
    private sleekbill.swingutils.autosuggesters.SBACPanelTextField sBACPanelUoM;
    // End of variables declaration//GEN-END:variables
}
