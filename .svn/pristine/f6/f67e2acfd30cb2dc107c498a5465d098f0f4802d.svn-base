/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import java.sql.SQLException;

import javax.swing.ImageIcon;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import sleekbill.Common;

import sleekbill.Messages;
import sleekbill.beans.SBDaoException;
import sleekbill.beans.State;
import sleekbill.db.SBConnection;
import sleekbill.util.SBSwingUtils;

/**
 *
 * @author Andrei
 */
public class JDialogCityData extends javax.swing.JDialog {

	State createdState;
	SBConnection sbConnection;
	
    /**
     * Creates new form JDialogCityData
     */
    public JDialogCityData(java.awt.Frame parent, boolean modal, SBConnection sbConnection) {
        super(parent, modal);
        this.sbConnection = sbConnection;
        initComponents();
        setLocationRelativeTo(parent);

        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.applyFocusBorder(this);
        jButtonCancel.setVisible(false);
		jTextFieldCountry.setText(Common.country);
        
        setMandatory();
        checkMandatory();
    }
    
    public JDialogCityData(java.awt.Dialog parent, boolean modal, SBConnection sbConnection) {
        super(parent, modal);
        this.sbConnection = sbConnection;
        initComponents();
        setLocationRelativeTo(parent);

        SBSwingUtils.addContextMenuToChildren(this);
        SBSwingUtils.applyFocusBorder(this);
        jButtonCancel.setVisible(false);
		jTextFieldCountry.setText(Common.country);
        
        setMandatory();
        checkMandatory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelSuper = new javax.swing.JPanel();
        jPanelSuperContent = new javax.swing.JPanel();
        jPanelContent = new javax.swing.JPanel();
        jPanelFields = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCity = new javax.swing.JTextField();
        jTextFieldCounty = new javax.swing.JTextField();
        jTextFieldState = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCountry = new javax.swing.JTextField();
        jPanelButtons = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanelTitle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New City");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelSuper.setBackground(new java.awt.Color(229, 235, 242));
        jPanelSuper.setLayout(new java.awt.GridBagLayout());

        jPanelSuperContent.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(195, 210, 219), 1, true));
        jPanelSuperContent.setLayout(new java.awt.GridBagLayout());

        jPanelContent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 209, 213)));
        jPanelContent.setLayout(new java.awt.GridBagLayout());

        jPanelFields.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(203, 209, 213)));
        jPanelFields.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("City");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jLabel2, gridBagConstraints);

        jLabel3.setText("County");
        jLabel3.setText((Common.country.equals("United Kingdom") ? "State" : "County"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jLabel3, gridBagConstraints);

        jLabel4.setText("State");
        jLabel4.setText((Common.country.equals("United Kingdom") ? "County" : "State"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jLabel4, gridBagConstraints);

        jTextFieldCity.setName("tfCity"); // NOI18N
        jTextFieldCity.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jTextFieldCity, gridBagConstraints);

        jTextFieldCounty.setName("tfCounty"); // NOI18N
        jTextFieldCounty.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jTextFieldCounty, gridBagConstraints);

        jTextFieldState.setName("tfState"); // NOI18N
        jTextFieldState.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jTextFieldState, gridBagConstraints);

        jLabel5.setText("Country");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jLabel5, gridBagConstraints);

        jTextFieldCountry.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelFields.add(jTextFieldCountry, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanelContent.add(jPanelFields, gridBagConstraints);

        jPanelButtons.setBackground(new java.awt.Color(246, 246, 246));
        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jButtonSave.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jButtonSave.setText("Save");
        jButtonSave.setName("bSave"); // NOI18N
        jButtonSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSaveMouseClicked(evt);
            }
        });
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons.add(jButtonSave, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.setName("bCancel"); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelButtons.add(jButtonCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelContent.add(jPanelButtons, gridBagConstraints);

        jPanelTitle.setBackground(new java.awt.Color(253, 253, 253));
        jPanelTitle.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("City Information");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelTitle.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelContent.add(jPanelTitle, gridBagConstraints);

        jPanelSuperContent.add(jPanelContent, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanelSuper.add(jPanelSuperContent, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelSuper, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        String city = jTextFieldCity.getText();
        String county = jTextFieldCounty.getText();
        String country = jTextFieldCountry.getText();
        String state = jTextFieldState.getText();

        if ((city == null || city.trim().isEmpty())
                || (country == null || country.trim().isEmpty())) {
            Messages.showErrorMessage(this, "<html>Please make sure you have provided a <b>City</b> and a <b>Country</b></html>", "Error");
            return;
        }
        try {
            if(State.get(sbConnection.getConnection(), state, county, city) != null){
                Messages.showErrorMessage(this, "This city already exists!", "Error");
                return;
            }
        } catch (SBDaoException ex) {
           Messages.showErrorMessage(this, "There was a problem in saving the city: "+ex.getMessage(), "Error");
           return;
        } catch (SQLException ex) {
           Messages.showErrorMessage(this, "There was a problem in saving the city: "+ex.getMessage(), "Error");
           return;
        }
        
        State s = new State();
        s.setCity(city);
        s.setCounty(county);
        s.setState(state);
        s.setCountry(country);
        try {
            State.add(sbConnection.getConnection(), s);
            createdState = s;
            Messages.showOkMessage(this, "The city was successfully saved!", "Save City");
        } catch (Exception ex) {
        	ex.printStackTrace();
            Messages.showErrorMessage(this, "There was a problem in saving the city: "+ex.getMessage(), "Error");
        }
        dispose();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveMouseClicked
        if (!jButtonSave.isEnabled()) {
            String city = jTextFieldCity.getText();
            String country = jTextFieldCountry.getText();

            if ((city == null || city.trim().isEmpty())
                    || (country == null || country.trim().isEmpty())) {
                Messages.showErrorMessage(this, "<html>Please make sure you have provided a <b>City</b> and a <b>Country</b></html>", "Error");
                return;
            }
        }
    }//GEN-LAST:event_jButtonSaveMouseClicked

    public State getCreatedState() {
		return createdState;
	}

	/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogCityData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogCityData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogCityData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogCityData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogCityData dialog = new JDialogCityData(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelFields;
    private javax.swing.JPanel jPanelSuper;
    private javax.swing.JPanel jPanelSuperContent;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JTextField jTextFieldCity;
    private javax.swing.JTextField jTextFieldCountry;
    private javax.swing.JTextField jTextFieldCounty;
    private javax.swing.JTextField jTextFieldState;
    // End of variables declaration//GEN-END:variables

    private void setMandatory() {
        jTextFieldCity.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });

        jTextFieldCountry.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkMandatory();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkMandatory();
            }
        });
    }

    private void checkMandatory() {
        String city = jTextFieldCity.getText();
        String country = jTextFieldCountry.getText();
        
        if ((city == null || city.trim().isEmpty())
                || (country == null || country.trim().isEmpty())) {
            jButtonSave.setEnabled(false);
            return;
        }
        jButtonSave.setEnabled(true);
    }
}
