/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sleekbill.frames;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.Iterator;

import javax.swing.ImageIcon;
import javax.swing.JTextPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.ToolTipManager;
import javax.swing.UIManager;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

import sleekbill.Common;
import sleekbill.Config;
import sleekbill.Messages;
import sleekbill.RETokenizer;
import sleekbill.util.EmailValidator;
import sleekbill.util.SBSwingUtils;
import sleekbill.util.sleekdetection.SleekDetection;
import sleekbill.util.sleekdetection.SleekResponse;

/**
 *
 * @author dani
 */
public class JDialogConfigEmail extends javax.swing.JDialog {

    int toolTipDelay = 0;
    SleekDetection sd = null;
    ImageIcon imgStop = new ImageIcon("./images/buttons/square.png");
    ImageIcon imgSearch = new ImageIcon("./images/buttons/Search.png");
    String toolTip1 = "";
    String toolTip2 = "Stop the search";
    
    String message, message2, message3, subject, subject2, subject3;

    /**
     * Creates new form JDialogConfigEmail
     */
    public JDialogConfigEmail(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
        setLocationRelativeTo(parent);

        jLabel2.setVisible(false);
        jButtonSleekDetection.setEnabled(EmailValidator.isValid(jTFSmtpUser.getText()));

        SBSwingUtils.applyFocusBorder(jPanel25);

        jTFSubiect.setBorder(null);
        jTAMesaj.setBorder(null);

        SBSwingUtils.applyManuaScrollPaneFocusBorder(jScrollPane2);
        SBSwingUtils.applyManuaScrollPaneFocusBorder(jScrollPane3);

        SBSwingUtils.addContextMenuToChildren(this);
        toolTip1 = jButtonSleekDetection.getToolTipText();

        jCBAfiseazaConfAvansate.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPCleft2 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel27 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jCBTls = new javax.swing.JCheckBox();
        jPFSmtpPass = new javax.swing.JPasswordField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jTFSmtpUser = new javax.swing.JTextField();
        jTFSmtpPort = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jTFSmtp = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jButtonSleekDetection = new javax.swing.JButton();
        jLabelHelp = new javax.swing.JLabel();
        jLabelHelp1 = new javax.swing.JLabel();
        jLabelHelp2 = new javax.swing.JLabel();
        jLabelHelp3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(21, 0), new java.awt.Dimension(21, 0), new java.awt.Dimension(21, 0));
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPButtonsEmail = new javax.swing.JPanel();
        jBSalveazaSmtp = new javax.swing.JButton();
        jBIesireSmtp = new javax.swing.JButton();
        jButtonResetTemplates = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jCBAfiseazaConfAvansate = new javax.swing.JCheckBox();
        jPPlaceholdere = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jRBSubiect = new javax.swing.JRadioButton();
        jRBMesaj = new javax.swing.JRadioButton();
        jLabel67 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAMesaj = new ColorPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTFSubiect = new ColorPane();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxTemplate = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Email Configuration");
        setMinimumSize(new java.awt.Dimension(750, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(229, 235, 242));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPCleft2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(195, 210, 219), 1, true));
        jPCleft2.setMinimumSize(new java.awt.Dimension(100, 100));
        jPCleft2.setOpaque(false);
        jPCleft2.setLayout(new java.awt.GridBagLayout());

        jPanel26.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 1, new java.awt.Color(203, 209, 213)));
        jPanel26.setPreferredSize(new java.awt.Dimension(572, 41));
        jPanel26.setLayout(new java.awt.GridBagLayout());

        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 0, 1));
        jTextArea1.setLineWrap(true);
        jTextArea1.setText("Please fill in the mail server information below. If you donâ€™t know where to find it, contact your hosting provider. For free services (e.g., gmail), this information is usually available on the web.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(null);
        jTextArea1.setFocusable(false);
        jTextArea1.setMinimumSize(new java.awt.Dimension(570, 40));
        jTextArea1.setOpaque(false);
        jTextArea1.setPreferredSize(new java.awt.Dimension(570, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.01;
        gridBagConstraints.weighty = 0.01;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel26.add(jTextArea1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPCleft2.add(jPanel26, gridBagConstraints);

        jPanel27.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 1, new java.awt.Color(203, 209, 213)));
        jPanel27.setLayout(new java.awt.GridBagLayout());

        jPanel25.setLayout(new java.awt.GridBagLayout());

        jLabel42.setText("TLS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jLabel42, gridBagConstraints);

        jCBTls.setName("cbTls"); // NOI18N
        jCBTls.setOpaque(false);
        jCBTls.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jCBTlsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jCBTlsMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 10);
        jPanel25.add(jCBTls, gridBagConstraints);

        jPFSmtpPass.setMinimumSize(new java.awt.Dimension(180, 20));
        jPFSmtpPass.setName("tfSmtpPass"); // NOI18N
        jPFSmtpPass.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jPFSmtpPass, gridBagConstraints);

        jLabel43.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jLabel43, gridBagConstraints);

        jLabel44.setText("Email Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jLabel44, gridBagConstraints);

        jTFSmtpUser.setMinimumSize(new java.awt.Dimension(180, 20));
        jTFSmtpUser.setName("tfSmtpUser"); // NOI18N
        jTFSmtpUser.setPreferredSize(new java.awt.Dimension(180, 20));
        jTFSmtpUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFSmtpUserKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jTFSmtpUser, gridBagConstraints);

        jTFSmtpPort.setText("25");
        jTFSmtpPort.setMinimumSize(new java.awt.Dimension(180, 20));
        jTFSmtpPort.setName("tfSmtpPort"); // NOI18N
        jTFSmtpPort.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jTFSmtpPort, gridBagConstraints);

        jLabel45.setText("Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jLabel45, gridBagConstraints);

        jTFSmtp.setMinimumSize(new java.awt.Dimension(180, 20));
        jTFSmtp.setName("tfSmtp"); // NOI18N
        jTFSmtp.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jTFSmtp, gridBagConstraints);

        jLabel48.setText("SMTP Server Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(jLabel48, gridBagConstraints);

        jButtonSleekDetection.setIcon(new ImageIcon("./images/buttons/Search.png"));
        jButtonSleekDetection.setToolTipText("<html>\nIn order to fetch the connection settings, you typically need to supply a valid email address.<br>\nPlease be aware that some services may only require the username for login.\n</html>");
        jButtonSleekDetection.setMaximumSize(new java.awt.Dimension(18, 18));
        jButtonSleekDetection.setMinimumSize(new java.awt.Dimension(18, 18));
        jButtonSleekDetection.setPreferredSize(new java.awt.Dimension(18, 18));
        jButtonSleekDetection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonSleekDetectionMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonSleekDetectionMouseEntered(evt);
            }
        });
        jButtonSleekDetection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSleekDetectionActionPerformed(evt);
            }
        });
        jPanel25.add(jButtonSleekDetection, new java.awt.GridBagConstraints());

        jLabelHelp.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp.setToolTipText("Typically the same as the account password");
        jLabelHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelpMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelpMouseEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel25.add(jLabelHelp, gridBagConstraints);

        jLabelHelp1.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp1.setToolTipText("The server that will send the email");
        jLabelHelp1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp1MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel25.add(jLabelHelp1, gridBagConstraints);

        jLabelHelp2.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp2.setToolTipText("Port to connect to the email server");
        jLabelHelp2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp2MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel25.add(jLabelHelp2, gridBagConstraints);

        jLabelHelp3.setIcon(new ImageIcon("./images/buttons/ico_help.png"));
        jLabelHelp3.setToolTipText("Check this box if your sever uses TLS");
        jLabelHelp3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelHelp3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelHelp3MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel25.add(jLabelHelp3, gridBagConstraints);

        jLabel2.setIcon(new ImageIcon("./images/icons/busy2.gif"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel25.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel25.add(filler1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel27.add(jPanel25, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPCleft2.add(jPanel27, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(253, 253, 253));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 1, new java.awt.Color(203, 209, 213)));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Message Configuration");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPCleft2.add(jPanel1, gridBagConstraints);

        jPButtonsEmail.setBackground(new java.awt.Color(246, 246, 246));
        jPButtonsEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 209, 213)));
        jPButtonsEmail.setPreferredSize(new java.awt.Dimension(261, 40));
        jPButtonsEmail.setLayout(new java.awt.GridBagLayout());

        jBSalveazaSmtp.setIcon(new ImageIcon("./images/buttons/ico_check.png"));
        jBSalveazaSmtp.setText("Save");
        jBSalveazaSmtp.setName("bSalveazaSmtp"); // NOI18N
        jBSalveazaSmtp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalveazaSmtpActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPButtonsEmail.add(jBSalveazaSmtp, gridBagConstraints);

        jBIesireSmtp.setText("Cancel");
        jBIesireSmtp.setName("bIesire"); // NOI18N
        jBIesireSmtp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIesireSmtpActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPButtonsEmail.add(jBIesireSmtp, gridBagConstraints);

        jButtonResetTemplates.setText("Reset Templates");
        jButtonResetTemplates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetTemplatesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPButtonsEmail.add(jButtonResetTemplates, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.01;
        jPCleft2.add(jPButtonsEmail, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(253, 253, 253));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 1, new java.awt.Color(203, 209, 213)));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Email Configuration");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPCleft2.add(jPanel3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 1, new java.awt.Color(203, 209, 213)));

        jPanel41.setOpaque(false);
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jLabel64.setText("Message");
        jLabel64.setToolTipText("<html>\nTo create a customized email template, click the desired variable <br>\non the right-hand side, and it will be placed at the cursor position.\n</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel41.add(jLabel64, gridBagConstraints);

        jLabel63.setText("Subject");
        jLabel63.setToolTipText("<html>\nTo create a customized email template click the desired variable on the right-hand side, and it will be placed at the cursor position. \n</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 5, 5);
        jPanel41.add(jLabel63, gridBagConstraints);

        jCBAfiseazaConfAvansate.setText("Show Advanced Configuration");
        jCBAfiseazaConfAvansate.setName("cbAfiseazaConfAvansate"); // NOI18N
        jCBAfiseazaConfAvansate.setOpaque(false);
        jCBAfiseazaConfAvansate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBAfiseazaConfAvansateItemStateChanged(evt);
            }
        });
        jCBAfiseazaConfAvansate.setSelected(Common.selectedCompanyConfig.get(Config.SHOW_PLACEHOLDERE).equals("true"));
        setPlaceHoldereVisible(jCBAfiseazaConfAvansate.isSelected());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.01;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel41.add(jCBAfiseazaConfAvansate, gridBagConstraints);

        jPPlaceholdere.setOpaque(false);
        java.awt.GridBagLayout jPPlaceholdereLayout = new java.awt.GridBagLayout();
        jPPlaceholdereLayout.columnWidths = new int[] {0};
        jPPlaceholdereLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPPlaceholdere.setLayout(jPPlaceholdereLayout);

        jLabel57.setText("#document total#");
        jLabel57.setToolTipText("e.g. $200.50");
        jLabel57.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel57.setIcon(new javax.swing.ImageIcon("./images/buttons/viewer_ico_prevl.png"));
        jLabel57.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLabel57FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jLabel57FocusLost(evt);
            }
        });
        jLabel57.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel57MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPPlaceholdere.add(jLabel57, gridBagConstraints);

        jLabel58.setText("#document type#");
        jLabel58.setToolTipText("e.g. Invoice etc");
        jLabel58.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel58.setIcon(new javax.swing.ImageIcon("./images/buttons/viewer_ico_prevl.png"));
        jLabel58.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLabel58FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jLabel58FocusLost(evt);
            }
        });
        jLabel58.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel58MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPPlaceholdere.add(jLabel58, gridBagConstraints);

        jLabel59.setText("#issue date#");
        jLabel59.setToolTipText("e.g. 09-30-2014");
        jLabel59.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel59.setIcon(new javax.swing.ImageIcon("./images/buttons/viewer_ico_prevl.png"));
        jLabel59.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel59MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPPlaceholdere.add(jLabel59, gridBagConstraints);

        jLabel60.setText("#due date#");
        jLabel60.setToolTipText("e.g. 09-30-2014");
        jLabel60.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel60.setIcon(new javax.swing.ImageIcon("./images/buttons/viewer_ico_prevl.png"));
        jLabel60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel60MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPPlaceholdere.add(jLabel60, gridBagConstraints);

        jLabel61.setText("#document number#");
        jLabel61.setToolTipText("e.g. 001");
        jLabel61.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel61.setIcon(new javax.swing.ImageIcon("./images/buttons/viewer_ico_prevl.png"));
        jLabel61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel61MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPPlaceholdere.add(jLabel61, gridBagConstraints);

        jLabel65.setText("#client name#");
        jLabel65.setToolTipText("Your Client's Name as entered on the document");
        jLabel65.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel65.setIcon(new javax.swing.ImageIcon("./images/buttons/viewer_ico_prevl.png"));
        jLabel65.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel65MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPPlaceholdere.add(jLabel65, gridBagConstraints);

        jLabel66.setText("#client contact#");
        jLabel66.setToolTipText("Your client's Contact Name as entered on the client information");
        jLabel66.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel66.setIcon(new javax.swing.ImageIcon("./images/buttons/viewer_ico_prevl.png"));
        jLabel66.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel66MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPPlaceholdere.add(jLabel66, gridBagConstraints);

        jRBSubiect.setSelected(true);
        jRBSubiect.setText("Subiect");
        jRBSubiect.setName("rbSubiect"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPPlaceholdere.add(jRBSubiect, gridBagConstraints);
        jRBSubiect.setVisible(false);

        jRBMesaj.setText("Mesaj");
        jRBMesaj.setName("rbMesaj"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPPlaceholdere.add(jRBMesaj, gridBagConstraints);
        jRBMesaj.setVisible(false);

        jLabel67.setText("#PayPal payment link#");
        jLabel67.setToolTipText("Inserts a direct link that will take your customer to a PayPal payment form");
        jLabel67.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel67.setIcon(new javax.swing.ImageIcon("./images/buttons/viewer_ico_prevl.png"));
        jLabel67.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel67MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPPlaceholdere.add(jLabel67, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel41.add(jPPlaceholdere, gridBagConstraints);

        jScrollPane2.setBorder(null);
        jScrollPane2.setMinimumSize(new java.awt.Dimension(400, 200));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(400, 140));

        jTAMesaj.setBorder(null);
        jTAMesaj.setToolTipText("<html>\nTo create a customized email template, click the desired variable <br>\non the right-hand side, and it will be placed at the cursor position.\n</html>");
        jTAMesaj.setMinimumSize(new java.awt.Dimension(400, 600));
        jTAMesaj.setName("epMesaj"); // NOI18N
        jTAMesaj.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTAMesajFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTAMesajFocusLost(evt);
            }
        });
        jTAMesaj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTAMesajKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jTAMesaj);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel41.add(jScrollPane2, gridBagConstraints);

        jScrollPane3.setBorder(null);
        jScrollPane3.setPreferredSize(new java.awt.Dimension(400, 25));
        jScrollPane3.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane3.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);

        jTFSubiect.setBorder(null);
        jTFSubiect.setToolTipText("<html>\nYou can create a customized email template by using information directly from the program in both subject and message. \n<br>To do so, you need to locate the cursor where the variable should be placed and click the desired variable on the right hand.\n</html>");
        jTFSubiect.setMaximumSize(null);
        jTFSubiect.setMinimumSize(new java.awt.Dimension(400, 20));
        jTFSubiect.setName("epSubiect"); // NOI18N
        jTFSubiect.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFSubiectFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFSubiectFocusLost(evt);
            }
        });
        jTFSubiect.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFSubiectKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(jTFSubiect);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 5, 5);
        jPanel41.add(jScrollPane3, gridBagConstraints);

        jLabel4.setText("Preview/Default");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel41.add(jLabel4, gridBagConstraints);

        jComboBoxTemplate.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "Template 1", "Template 2", "Template 3" }));
        jComboBoxTemplate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTemplateItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel41.add(jComboBoxTemplate, gridBagConstraints);

        jPanel4.add(jPanel41);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPCleft2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.01;
        gridBagConstraints.weighty = 0.01;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanel2.add(jPCleft2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSalveazaSmtpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalveazaSmtpActionPerformed

        if (jTFSmtpUser.getText().isEmpty()
                || jTFSmtp.getText().isEmpty()
                || jTFSmtpPort.getText().isEmpty()
                || jPFSmtpPass.getText().isEmpty()) {
            Messages.showWarningMessage(this, "You haven't provided all the necessary information for the Email Configuration!", "Warning");
            return;
        }

        if (save()) {
            dispose();
        }
    }//GEN-LAST:event_jBSalveazaSmtpActionPerformed

    private void jBIesireSmtpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIesireSmtpActionPerformed
        dispose();
    }//GEN-LAST:event_jBIesireSmtpActionPerformed

    @Override
    public void dispose() {
        super.dispose();
        if (sd != null) {
            sd.setStop(true);
        }
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (sd != null) {
            sd.setStop(true);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jLabelHelp3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp3MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp3MouseExited

    private void jLabelHelp3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp3MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp3MouseEntered

    private void jLabelHelp2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp2MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp2MouseExited

    private void jLabelHelp2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp2MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp2MouseEntered

    private void jLabelHelp1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp1MouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelp1MouseExited

    private void jLabelHelp1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelp1MouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelp1MouseEntered

    private void jLabelHelpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelpMouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jLabelHelpMouseEntered

    private void jLabelHelpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelpMouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jLabelHelpMouseExited

    private void jButtonSleekDetectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSleekDetectionActionPerformed

        if (jButtonSleekDetection.getIcon().equals(imgStop) && sd != null) {
            sd.setStop(true);
            return;
        }
        jButtonSleekDetection.setIcon(imgStop);
        jLabel2.setVisible(true);
        jButtonSleekDetection.setToolTipText(toolTip2);

        sd = new SleekDetection() {
            @Override
            protected void done() {
                SleekResponse detect = null;
                try {
                    detect = sd.get();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

                jButtonSleekDetection.setIcon(imgSearch);
                jLabel2.setVisible(false);
                jButtonSleekDetection.setToolTipText(toolTip1);

                if (detect != null) {
                    jTFSmtp.setText(detect.getSmtp());
                    jTFSmtpPort.setText(detect.getPort());
                    jCBTls.setSelected(detect.isTls());
                    setCursor(null);
                    return;
                } else if (!this.isStop()) {
                    Messages.showErrorMessage(JDialogConfigEmail.this, "Sleek Bill was unable to detect your connection settings!", "Warning");
                }
            }
        };

        sd.setMail(jTFSmtpUser.getText());
        sd.execute();
    }//GEN-LAST:event_jButtonSleekDetectionActionPerformed

    private void jButtonSleekDetectionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSleekDetectionMouseEntered
        toolTipDelay = ToolTipManager.sharedInstance().getInitialDelay() > 0 ? ToolTipManager.sharedInstance().getInitialDelay() : toolTipDelay;
        ToolTipManager.sharedInstance().setInitialDelay(0);
    }//GEN-LAST:event_jButtonSleekDetectionMouseEntered

    private void jButtonSleekDetectionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSleekDetectionMouseExited
        if (toolTipDelay > 0) {
            ToolTipManager.sharedInstance().setInitialDelay(toolTipDelay);
        }
    }//GEN-LAST:event_jButtonSleekDetectionMouseExited

    private void jTFSmtpUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFSmtpUserKeyReleased
        synchronizeFieldsEmail(evt.getSource());
    }//GEN-LAST:event_jTFSmtpUserKeyReleased

    private void jCBTlsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCBTlsMouseExited
        //        mainJsp.setText(HELP_TEXT_EMAIL_DEFAULT);
    }//GEN-LAST:event_jCBTlsMouseExited

    private void jCBTlsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCBTlsMouseEntered
        if (jCBTls.isSelected()) {
            //            mainJsp.setText(HELP_TEXT_TLS_OFF);
        } else {
            //            mainJsp.setText(HELP_TEXT_TLS);
        }
    }//GEN-LAST:event_jCBTlsMouseEntered

    private void jCBAfiseazaConfAvansateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBAfiseazaConfAvansateItemStateChanged
        if (jCBAfiseazaConfAvansate.isSelected()) {
            setPlaceHoldereVisible(true);
        } else {
            setPlaceHoldereVisible(false);
        }
        //jPPlaceholdere.revalidate();
    }//GEN-LAST:event_jCBAfiseazaConfAvansateItemStateChanged

    private void jLabel57MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel57MouseClicked
        adaugaItem(jLabel57.getText());
    }//GEN-LAST:event_jLabel57MouseClicked

    private void jLabel57FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLabel57FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel57FocusGained

    private void jLabel57FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLabel57FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel57FocusLost

    private void jLabel58MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel58MouseClicked
        adaugaItem(jLabel58.getText());
    }//GEN-LAST:event_jLabel58MouseClicked

    private void jLabel58FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLabel58FocusGained
        //  jLabel2.setBackground(Color.BLACK);
    }//GEN-LAST:event_jLabel58FocusGained

    private void jLabel58FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLabel58FocusLost
        //  jLabel2.setBackground(null);
    }//GEN-LAST:event_jLabel58FocusLost

    private void jLabel59MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel59MouseClicked
        adaugaItem(jLabel59.getText());
    }//GEN-LAST:event_jLabel59MouseClicked

    private void jLabel60MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel60MouseClicked
        adaugaItem(jLabel60.getText());
    }//GEN-LAST:event_jLabel60MouseClicked

    private void jLabel61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel61MouseClicked
        adaugaItem(jLabel61.getText());
    }//GEN-LAST:event_jLabel61MouseClicked

    private void jLabel65MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel65MouseClicked
        adaugaItem(jLabel65.getText());
    }//GEN-LAST:event_jLabel65MouseClicked

    private void jLabel66MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel66MouseClicked
        adaugaItem(jLabel66.getText());
    }//GEN-LAST:event_jLabel66MouseClicked

    private void jTAMesajFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTAMesajFocusGained
        jRBMesaj.setSelected(true);
    }//GEN-LAST:event_jTAMesajFocusGained

    private void jTAMesajFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTAMesajFocusLost
        jRBMesaj.setSelected(false);
    }//GEN-LAST:event_jTAMesajFocusLost

    private void jTAMesajKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAMesajKeyTyped
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY,
                StyleConstants.Foreground, (Color) UIManager.getDefaults().getColor("TextField.foreground"));
        ((ColorPane) jTAMesaj).setCharacterAttributes(aset, false);
    }//GEN-LAST:event_jTAMesajKeyTyped

    private void jTFSubiectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFSubiectFocusGained
        jRBSubiect.setSelected(true);
    }//GEN-LAST:event_jTFSubiectFocusGained

    private void jTFSubiectFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFSubiectFocusLost
        jRBSubiect.setSelected(false);
    }//GEN-LAST:event_jTFSubiectFocusLost

    private void jTFSubiectKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFSubiectKeyTyped
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY,
                StyleConstants.Foreground, (Color) UIManager.getDefaults().getColor("TextField.foreground"));
        ((ColorPane) jTFSubiect).setCharacterAttributes(aset, false);
    }//GEN-LAST:event_jTFSubiectKeyTyped

    private void jLabel67MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel67MouseClicked
        adaugaItem(jLabel67.getText());
    }//GEN-LAST:event_jLabel67MouseClicked

    private void jComboBoxTemplateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTemplateItemStateChanged

        Config c = Common.selectedCompanyConfig;
        jTFSubiect.setText("");
        jTAMesaj.setText("");
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            switch (jComboBoxTemplate.getSelectedIndex()) {
                case 0: // selected template 1                
                    this.message = c.get(Config.MESSAGE);
                    this.subject = c.get(Config.SUBJECT);

                    manageTexteInitialeEmail(this.subject, this.message);
                    break;
                case 1: // selected template 2                
                    this.message2 = c.get(Config.MESSAGE2);
                    this.subject2 = c.get(Config.SUBJECT2);

                    manageTexteInitialeEmail(this.subject2, this.message2);
                    break;
                case 2: // selected template 3                
                    this.message3 = c.get(Config.MESSAGE3);
                    this.subject3 = c.get(Config.SUBJECT3);

                    manageTexteInitialeEmail(this.subject3, this.message3);
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_jComboBoxTemplateItemStateChanged

    private void jButtonResetTemplatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetTemplatesActionPerformed
        
        // GUI 
        jComboBoxTemplate.setSelectedIndex(0); // set first one        
        jTFSubiect.setText(Config.DEFAULT_SUBJECT);
        jTAMesaj.setText(Config.DEFAULT_MESSAGE);
        
        Config c = Common.selectedCompanyConfig;        
            
        // if all set - update
        c.set(Config.MESSAGE, Config.DEFAULT_MESSAGE);
        c.set(Config.SUBJECT, Config.DEFAULT_SUBJECT);  

        c.set(Config.MESSAGE2, Config.DEFAULT_MESSAGE2);
        c.set(Config.SUBJECT2, Config.DEFAULT_SUBJECT2);        

        c.set(Config.MESSAGE3, Config.DEFAULT_MESSAGE3);
        c.set(Config.SUBJECT3, Config.DEFAULT_SUBJECT3); 
        
        c.set(Config.DEFAULT_EMAIL_TEMPLATE, String.valueOf(0));
    }//GEN-LAST:event_jButtonResetTemplatesActionPerformed

    public class ColorPane extends JTextPane {

        public void append(Color c, String s) {
            StyleContext sc = StyleContext.getDefaultStyleContext();
            AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);
            setCharacterAttributes(aset, false);
            s = s.replaceAll("\r", "");
            replaceSelection(s);
            aset = sc.removeAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground);
        }
    }

    private void synchronizeFieldsEmail(Object source) {
        if (source == jTFSmtpUser) {
            String text = jTFSmtpUser.getText().toLowerCase();
            if (text.contains("gmail.com")) {
                jTFSmtp.setText("smtp.gmail.com");
                jTFSmtpPort.setText("587");
                jCBTls.setSelected(true);
            } else if (text.contains("yahoo.com")) {
                jTFSmtp.setText("smtp.mail.yahoo.com");
                jTFSmtpPort.setText("25");
                jCBTls.setSelected(true);
            } else if (text.contains("hotmail.com")) {
                jTFSmtp.setText("smtp.live.com");
                jTFSmtpPort.setText("25");
                jCBTls.setSelected(true);
            } else {
                jTFSmtp.setText("");
                jTFSmtpPort.setText("");
                jCBTls.setSelected(false);
            }

            jButtonSleekDetection.setEnabled(EmailValidator.isValid(text));

        }
    }
    
    public boolean save() {
        try {
            Integer.parseInt(jTFSmtpPort.getText());
            
            Config c = Common.selectedCompanyConfig;
            c.set(Config.SMTP_HOST, jTFSmtp.getText());
            c.set(Config.SMTP_PORT, jTFSmtpPort.getText());
            c.set(Config.SMTP_TLS, jCBTls.isSelected() ? "true" : "false");
            c.set(Config.SMTP_USER, jTFSmtpUser.getText());
            c.set(Config.SMTP_PASS, Common.getEncrypter().encrypt(new String(jPFSmtpPass.getPassword())));
            
            // default email message
            c.set(Config.DEFAULT_EMAIL_TEMPLATE, String.valueOf(jComboBoxTemplate.getSelectedIndex()));
            
            // do this once again 
            switch (jComboBoxTemplate.getSelectedIndex()) {
                case 0: // selected template 1                
                    this.message = jTAMesaj.getText();
                    this.subject = jTFSubiect.getText();
                    
                    break;
                case 1: // selected template 2                
                    this.message2 = jTAMesaj.getText();
                    this.subject2 = jTFSubiect.getText();
                    
                    break;
                case 2: // selected template 3                
                    this.message3 = jTAMesaj.getText();
                    this.subject3 = jTFSubiect.getText();
                    
                    break;
                default:
                    break;
            }
            
            // if all set - update
            if (message != null  && subject != null){
                c.set(Config.MESSAGE, message);
                c.set(Config.SUBJECT, subject);                
            }
            
            // if all set - update
            if (message2 != null && subject2 != null){
                c.set(Config.MESSAGE2, message2);
                c.set(Config.SUBJECT2, subject2);
            }
            
            // if all set - update
            if (message3 != null && subject3 != null){
                c.set(Config.MESSAGE3, message3);
                c.set(Config.SUBJECT3, subject3);
            }
            
            c.set(Config.SHOW_PLACEHOLDERE, jCBAfiseazaConfAvansate.isSelected() ? "true" : "false");
            Messages.showOkMessage(this, "The configuration was saved.", "Confirmation");
            
            return true;
        } catch (NumberFormatException nfe) {
            Messages.showErrorMessage(this, "The port must be a valid number between 1 and 65535", "Error");
            
            return false;
        }
    }

    public void init() {
        Config c = Common.selectedCompanyConfig;
        
        jTFSmtp.setText(c.get(Config.SMTP_HOST));
        jTFSmtpPort.setText(c.get(Config.SMTP_PORT));
        jCBTls.setSelected("true".equals(c.get(Config.SMTP_TLS)));
        jTFSmtpUser.setText(c.get(Config.SMTP_USER));
        jPFSmtpPass.setText(c.get(Config.SMTP_PASS) != null ? Common.getEncrypter().decrypt(c.get(Config.SMTP_PASS)) : "");
        jComboBoxTemplate.setSelectedIndex(Integer.parseInt(c.get(Config.DEFAULT_EMAIL_TEMPLATE)));        
        
        manageTexteInitialeEmail(c.get(Config.SUBJECT), c.get(Config.MESSAGE));
    }

    /**
     * It setts different text color inside message text view
     * 
     * @param subiect
     * @param message 
     */
    private void manageTexteInitialeEmail(String subiect, String message) {

        Color textColor = (Color) UIManager.getDefaults().getColor("TextField.foreground");

        String patternStr = "(#document type#|#document number#|#document total#|#issue date#|#due date#|#client name#|#client contact#|#PayPal payment link#)";
        boolean returnDelims = true;

        //subiect
        Iterator tokenizerSub = new RETokenizer(subiect, patternStr, returnDelims);

        while (tokenizerSub.hasNext()) {
            String tokenOrDelim = (String) tokenizerSub.next();

            if (isPlaceHolder(tokenOrDelim)) {
                ((ColorPane) jTFSubiect).append(Color.gray, tokenOrDelim);
            } else {
                ((ColorPane) jTFSubiect).append(textColor, tokenOrDelim);
            }
        }
        //mesaj
        Iterator tokenizerMess = new RETokenizer(message, patternStr, returnDelims);

        while (tokenizerMess.hasNext()) {
            String tokenOrDelim = (String) tokenizerMess.next();

            if (isPlaceHolder(tokenOrDelim)) {
                ((ColorPane) jTAMesaj).append(Color.gray, tokenOrDelim);
            } else {
                ((ColorPane) jTAMesaj).append(textColor, tokenOrDelim);
            }
        }
    }

    public boolean isPlaceHolder(String str) {
        if (str.equalsIgnoreCase("#document type#")) {
            return true;
        }
        if (str.equalsIgnoreCase("#document number#")) {
            return true;
        }
        if (str.equalsIgnoreCase("#document total#")) {
            return true;
        }
        if (str.equalsIgnoreCase("#issue date#")) {
            return true;
        }
        if (str.equalsIgnoreCase("#due date#")) {
            return true;
        }
        if (str.equalsIgnoreCase("#client name#")) {
            return true;
        }
        if (str.equalsIgnoreCase("#client contact#")) {
            return true;
        }
        if (str.equalsIgnoreCase("#PayPal payment link#")) {
            return true;
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogConfigEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogConfigEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogConfigEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogConfigEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogConfigEmail dialog = new JDialogConfigEmail(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jBIesireSmtp;
    private javax.swing.JButton jBSalveazaSmtp;
    private javax.swing.JButton jButtonResetTemplates;
    private javax.swing.JButton jButtonSleekDetection;
    private javax.swing.JCheckBox jCBAfiseazaConfAvansate;
    private javax.swing.JCheckBox jCBTls;
    private javax.swing.JComboBox<String> jComboBoxTemplate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabelHelp;
    private javax.swing.JLabel jLabelHelp1;
    private javax.swing.JLabel jLabelHelp2;
    private javax.swing.JLabel jLabelHelp3;
    private javax.swing.JPanel jPButtonsEmail;
    private javax.swing.JPanel jPCleft2;
    private javax.swing.JPasswordField jPFSmtpPass;
    private javax.swing.JPanel jPPlaceholdere;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JRadioButton jRBMesaj;
    private javax.swing.JRadioButton jRBSubiect;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JEditorPane jTAMesaj;
    private javax.swing.JTextField jTFSmtp;
    private javax.swing.JTextField jTFSmtpPort;
    private javax.swing.JTextField jTFSmtpUser;
    private javax.swing.JEditorPane jTFSubiect;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private void setPlaceHoldereVisible(boolean visible) {
        jLabel57.setVisible(visible);
        jLabel58.setVisible(visible);
        jLabel59.setVisible(visible);
        jLabel60.setVisible(visible);
        jLabel61.setVisible(visible);
        jLabel65.setVisible(visible);
        jLabel66.setVisible(visible);
        jLabel67.setVisible(visible);
        jRBSubiect.setVisible(false);
        jRBMesaj.setVisible(false);
    }

    private void adaugaItem(String str) {
        if (jRBMesaj.isSelected()) {
            ((ColorPane) jTAMesaj).append(Color.gray, str);
            //jTAMesaj.replaceSelection("<b>"+str+"</b>");
            jTAMesaj.requestFocus();
        } else if (jRBSubiect.isSelected()) {
            ((ColorPane) jTFSubiect).append(Color.gray, str);
            jTFSubiect.requestFocus();
        }
    }
}
